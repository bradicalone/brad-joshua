/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n/******  GLOBAL VARIABLES  *******/\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar animate768 = \"M565.1,0v900H0c0,0,0-75.3,0-192.4c0-211.7,0-303.7,0-533.1C0,50.5,0,0,0,0H565.1z;\" + \"M565.1,0v900H182.7c0,0-44-72.5-44-191.7c0-107.5,121.8-396.1,121.8-533.8C260.5,41,245.9,0,245.9,0H565.1z;\" + \"M571.8,0v900H386.7c0,0-31.4-42.7-31.4-191.7C355.3,568,555,285,555,80.7C555,20,551.5,0,551.5,0H571.8z;\" + \"M573,0v900h-2.3c0,0,0.4-65.2,0.4-192.4c0-176.8-0.2-347.9-0.2-533.4c0-124-0.2-174.2-0.2-174.2H573z\";\n\nvar animate400 = \"M390,800H6c0,0-6-45.9-6-161.3C0,443.6,5,286.1,5,47.3C5,10.7,3,0,3,0h387V800z;\" + \"M390,800H96c0,0-46-45.9-46-161.3c0-195.1,130-352.6,130-591.3c0-36.7-3-47.3-3-47.3h213V800z;\" + \"M390,800H243c0,0-37-45.9-37-161.3c0-195.1,176-352.6,176-591.3c0-36.7-1-47.3-1-47.3h9V800z;\" + \"M390,800h-7c0,0,0-45.9,0-161.3c0-195.1,5-352.6,5-591.3c0-36.7-1-47.3-1-47.3h3V800z\";\n\nvar isFirefox = typeof InstallTrigger !== 'undefined';\nvar isSafari = navigator.userAgent.indexOf(\"Safari\") != -1 && navigator.userAgent.indexOf(\"Chrome\") === -1;\n\nvar wW = window.innerWidth;\nvar wH = window.innerHeight;\nvar lastDist;\n\n//Firefox Bug, transforms not working, so sets attribute to 0 instead\nif (isFirefox) {\n    //svg morfing problem\n    document.getElementsByTagName('feGaussianBlur')[0].setAttribute('stdDeviation', '6');\n    //svg css problem\n    _('svg-circle').setAttribute('r', 0);\n    _('svg-circle').style.transform = 'scale(1)';\n}\n\nif (isSafari) _('svg-page').style.visibility = \"hidden\";\n\nfunction _(clss) {\n\n    var classes = document.getElementsByClassName(clss);\n\n    if (classes.length === 1) {\n        return classes[0];\n    }\n    if (classes.length > 1) {\n        return classes;\n    } else return \"Not a working class\";\n};\n\nvar easeOut = function easeOut(progress) {\n    return Math.pow(--progress, 5) + 1;\n};\n\n//String: indicates new size of width or height that you want. Size: of the new size of the string. El: the element you want it for\nvar newSize = function newSize(string, size, el) {\n    if (typeof el !== 'undefined') {\n\n        var ogWidth = el.getBoundingClientRect().width;\n        var ogHeight = el.getBoundingClientRect().height;\n        if (ogWidth === 0 || ogHeight === 0) {\n            ogWidth = el.getAttribute('width');\n            ogHeight = el.getAttribute('height');\n        }\n    } else {\n        var ogWidth = 762.22;\n        var ogHeight = 668.97;\n    }\n\n    if (string === 'height') {\n        var ratio = ogHeight / size;\n        return {\n            height: size,\n            width: ogWidth / ratio\n        };\n    } else if (string === 'width') {\n        var _ratio = ogWidth / size;\n        return {\n            width: size,\n            height: ogHeight / _ratio\n        };\n    } else console.log('check parameters');\n};\n\nWebFont.load({\n    google: {\n        families: ['Do Hyeon', 'Orbitron']\n    },\n    active: function active() {\n        //Starts when google fonts are loaded     \n        slotMachine();\n        Stretch();\n    }\n});\n\nfunction slotMachine() {\n\n    var canvas = document.getElementById('slot-machine');\n    var ctx = canvas.getContext('2d');\n\n    var Slot = function Slot() {\n        this.x = 0;\n        this.width = canvas.width = wW < 970 ? 360 : 475;\n        this.height = canvas.height = wW < 970 ? 360 : 475;\n        this.text = 'PHOTO';\n        this.letters = [];\n\n        this.addLetter = function (n) {\n\n            var letterHeight = wW < 970 ? -124 : -158;\n\n            //Places letters at top index 1,3,5\n            var bottom = wW < 970 ? this.height + 60 : this.height + 96;\n            for (var j = 0; j < n; j++) {\n                //Resets x every iteration\n                this.x = 0;\n                //Adjust bottom and height all letters\n                letterHeight = wW < 970 ? letterHeight + 121 : letterHeight + 158;\n                for (var i = 0; i < this.text.length; i++) {\n\n                    var data = {\n                        top: letterHeight,\n                        letter: this.text[i],\n                        x: i === 0 ? -5 : wW < 970 ? this.x += 74 : this.x += 100.8,\n                        speed: 9,\n                        bottom: bottom - letterHeight,\n                        start: i % 2 === 0 ? \"up\" : \"down\"\n                    };\n                    n === 4 ? this.letters.push(data) : this.letters.unshift(data);\n\n                    var letter = data;\n\n                    if (i % 2 === 0) {\n                        this.drawUp(letter);\n                    } else {\n\n                        if (wW < 970) {\n                            //fixes spacing issue Orbitron font\n                            i === 3 ? letter.x += 3 : true;\n                            i === 1 ? letter.x -= 3 : true;\n                        }\n                        this.drawDown(letter);\n                    }\n                }\n            }\n        };\n        this.addLetter(4);\n    };\n\n    Slot.prototype.drawUp = function (text) {\n\n        ctx.font = wW < 970 ? \"Bold 62pt Orbitron\" : \"105pt Do Hyeon\";\n        ctx.fillText(text.letter, text.x, text.bottom);\n    };\n    Slot.prototype.drawDown = function (text) {\n\n        ctx.fillStyle = \"#0D1B56\";\n        ctx.font = wW < 970 ? \"Bold 62pt Orbitron\" : \"105pt Do Hyeon\";\n        ctx.fillText(text.letter, text.x, text.top);\n    };\n\n    Slot.prototype.update = function () {\n\n        // var push = wW < 970 ? -61 : -74\n        var push = wW < 970 ? -61 : -75;\n        if (!slotMachine.prototype.toggle) return;\n\n        //New set if letters drawn based on spacing\n        if (this.letters[19].bottom <= push) {\n\n            this.letters.splice(15, 5);\n            this.addLetter(1);\n        }\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        for (var i = 0; i < this.letters.length; i++) {\n\n            var letter = this.letters[i];\n\n            letter.top += letter.speed;\n            letter.bottom -= letter.speed;\n\n            if (letter.start === \"up\") {\n\n                this.drawUp(letter);\n            } else this.drawDown(letter);\n        }\n        requestAnimationFrame(this.update.bind(this));\n    };\n    var slot = new Slot();\n\n    document.querySelector('.photo .start-canvas').addEventListener('click', function () {\n\n        //Start Canvas\n        slotMachine.prototype.toggle = true;\n        requestAnimationFrame(slot.update.bind(slot));\n    });\n\n    document.querySelector('.photo .stop-canvas').addEventListener('click', function () {\n        //Stop Canvas\n        slotMachine.prototype.toggle = false;\n    });\n}\n\nfunction Stretch() {\n\n    var canvas = document.getElementById('stretch');\n    var ctx = canvas.getContext('2d');\n\n    if (wW < 970) {\n        var width = 400;\n        var height = 375;\n        var strtch = 15;\n        var letterDist = 53;\n        var x = 65;\n        var stretchX = 5;\n        var mixedNum = 5;\n    }\n    if (wW < 400) {\n        var width = 360;\n        var height = 375;\n        var x = 50;\n        var mixedNum = -10;\n    }\n    if (wW > 970) {\n        var width = 650;\n        var height = 450;\n        var strtch = 30;\n        var letterDist = 65;\n        var x = 125;\n        var mixedNum = 5;\n    }\n    /** CHANGE NUMBER FOR lineCount TO ADD OR SUBTRACT HOW MANY LINES OF WORDS **/\n    var lineCount = 7;\n    var count = 0;\n    var t = lineCount - 1;\n    var colors = [\"#DAF7A6\", \"#FFC300 \", \"#FF5733\", \"#C70039\", \"#900C3F\", \"#581845\", \"#37102b\"];\n    var Letters = function Letters() {\n        // this.text = 'SOLUTIONS'\n        this.letters = [];\n        this.total = this.letters.length - 1;\n        this.total = 0;\n        this.y = 0;\n\n        this.width = canvas.width = width;\n        this.height = canvas.height = height;\n        this.text = 'DEVELOPER';\n\n        this.pushLetters = function (x, dist) {\n            //If pushLetters is ran again makes sure this.y = 0\n            if (this.y) this.y = 0;\n            var canvasHeight = this.height;\n            for (var i = 0; i < lineCount; i++) {\n                var data = {\n                    x: x,\n                    letter: this.text,\n                    stretch: strtch,\n                    start: 0,\n                    speed: i,\n                    dist: typeof dist === 'number' ? dist : 0,\n                    //Letters distance between each other virticle \n                    distance: this.y += letterDist,\n                    //Letters start on the bottom\n                    bottom: wW < 970 ? canvasHeight + 45 : canvasHeight + 62,\n                    begin: 1,\n                    //When the next rotation starts\n                    beginY: 0,\n                    scaleTotal: 4,\n                    distY: 0,\n                    color: colors[i]\n                };\n                this.letters.push(data);\n            }\n        };\n        this.pushLetters(x);\n    };\n\n    var drawUp = function drawUp(letter, dist) {\n\n        ctx.setTransform(1, 0, 0, letter.scale, letter.x, letter.bottom - dist);\n        ctx.font = wW < 970 ? \"40pt Do Hyeon\" : \"60pt Do Hyeon\";\n        ctx.fillStyle = letter.color;\n        ctx.fillText(letter.letter, 0, letter.textY);\n        // var text = ctx.measureText(letter.letter)\n    };\n    var stretch = function stretch(text) {\n        ctx.canvas.style.letterSpacing = text.dist + 'px';\n        ctx.font = wW < 970 ? \"40pt Do Hyeon\" : \"60pt Do Hyeon\";\n        ctx.fillStyle = text.color;\n        ctx.fillText(text.letter, text.x, text.bottom - text.distance);\n    };\n\n    var drawDown = function drawDown(letter) {\n        ctx.font = wW < 970 ? \"40pt Do Hyeon\" : \"60pt Do Hyeon\";\n        ctx.fillStyle = letter.color;\n        ctx.fillText(letter.letter, letter.x, letter.y);\n    };\n\n    var drawBackFlip = function drawBackFlip(letter) {\n        ctx.font = wW < 970 ? \"40pt Do Hyeon\" : \"60pt Do Hyeon\";\n        ctx.fillStyle = letter.color;\n        ctx.setTransform(1, 0, 0, letter.scale, letter.x, letter.y);\n        ctx.fillText(letter.letter, 0, letter.textY);\n    };\n\n    Letters.prototype.addLetters = function (timestamp) {\n\n        if (!Stretch.prototype.toggle) return;\n        var j = 0;\n\n        ctx.globalCompositeOperation = 'destination-under';\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        for (var i = 0; i < this.letters.length; i++) {\n\n            var letter = this.letters[i];\n            letter.y = letter.bottom - letter.distance;\n\n            //FOURTH AND LAST CALL, REMOVE WORDS\n            if (count === 3 && i === t) {\n\n                if (!letter.start) letter.start = timestamp;\n                var runtime = timestamp - letter.start;\n                var progress = Math.min(runtime / 600, 1);\n                letter.y += letter.distance * progress;\n\n                letter.scale = 0 || (letter.begin - letter.scaleTotal * progress).toFixed(2);\n                letter.textY = (letter.beginY + letter.distY * progress).toFixed(2);\n                drawBackFlip(letter);\n\n                if (letter.scale == -1 || letter.scale < -1) {\n\n                    letter.beginY = 10;\n                    letter.distY = wW < 970 ? -5 : -10;\n                    letter.scaleTotal = -4;\n                    letter.begin = -3;\n                }\n\n                if (progress === 1) {\n                    //Removes item from array after each word is finished animating\n                    this.letters.splice(t, 1);\n                    t--;\n                }\n                if (t === -1) {\n                    setTimeout(function () {\n                        this.total = 0;\n                        count = 0;\n                        t = lineCount - 1;\n                        this.letters.length = 0;\n                        this.pushLetters(x);\n                    }.bind(this), 200);\n                }\n            }\n            if (count === 3 && i !== t) drawDown(letter);\n\n            //THIRD, LETTER STRETCH IN\n            if (count === 2 && i === t) {\n                if (!letter.start) letter.start = timestamp;\n                var runtime = timestamp - letter.start;\n                var progress = Math.min(runtime / 125, 1);\n                letter.dist = letter.stretch - letter.stretch * progress;\n\n                letter.x = mixedNum + letter.stretch * progress * 4;\n\n                stretch(letter);\n\n                if (progress === 1) {\n                    t--;\n                }\n                //RESETS VARIABLES, CALLS FUNCTION ALL OVER AGAIN\n                if (t === -1) {\n                    setTimeout(function () {\n                        count++;\n                        t = lineCount - 1;\n                        this.letters.length = 0;\n                        this.pushLetters(x, 0);\n                    }.bind(this), 200);\n                }\n            }\n            if (count === 2 && i !== t) {\n\n                stretch(letter);\n            }\n\n            //SECOND, LETTER STRETCH OUT\n            if (count === 1 && i === j) {\n\n                if (!letter.start) letter.start = timestamp;\n                var runtime = timestamp - letter.start;\n                var progress = Math.min(runtime / 150, 1);\n\n                letter.dist = letter.stretch * progress;\n                letter.x = x - letter.dist * 4;\n\n                stretch(letter);\n\n                if (progress === 1) {\n                    j++;\n                }\n\n                if (j === this.letters.length) {\n                    count++;\n                    this.letters.length = 0;\n                    // -5 because letters stretched to far, need to fix numbers\n                    // wW < 970 ? this.pushLetters(5, 15) : this.pushLetters(5, 30);\n                    this.pushLetters(mixedNum, wW < 970 ? 15 : 30);\n                }\n            }\n            if (count == 1 && i !== j) {\n                letter.x = letter.x;\n                letter.dist = letter.dist;\n                stretch(letter);\n            }\n\n            //FIRST, LETTER CLIMBE\n            if (i === j && count === 0) {\n\n                if (!letter.start) letter.start = timestamp;\n                var runtime = timestamp - letter.start;\n                var progress = Math.min(runtime / 600, 1);\n                var dist = letter.distance * progress;\n\n                letter.scale = 0 || (letter.begin - letter.scaleTotal * progress).toFixed(2);\n                letter.textY = (letter.beginY + letter.distY * progress).toFixed(2);\n\n                drawUp(letter, dist);\n\n                //Adds second flip to make upright text half way up canvas\n                if (letter.scale == -1 || letter.scale < -1) {\n                    //When the next rotation starts for beginY and distY\n                    letter.beginY = wW < 970 ? 5 : 10;\n                    letter.distY = wW < 970 ? -5 : -10;\n                    letter.scaleTotal = -4;\n                    letter.begin = -3;\n                }\n\n                if (progress === 1) {\n                    j++;\n                }\n\n                if (j === this.letters.length) {\n                    count++;\n                    this.letters.length = 0;\n                    this.pushLetters(x, 0);\n                }\n            }\n        }\n        requestAnimationFrame(this.addLetters.bind(this));\n    };\n    var letters = new Letters();\n\n    document.querySelector('.developer .start-canvas').addEventListener('click', function (e) {\n\n        Stretch.prototype.toggle = true;\n        requestAnimationFrame(letters.addLetters.bind(letters));\n    });\n\n    document.querySelector('.developer .stop-canvas').addEventListener('click', function () {\n\n        Stretch.prototype.toggle = false;\n    });\n};\n\nfunction ImageShatter() {\n    var sizing = function sizing(content) {\n        if (content === 'dur') {\n            if (window.innerWidth < 600) return 2.6;else if (window.innerWidth > 600) return 3.5;\n        }\n        if (content === 'img') {\n            if (window.innerWidth <= 600) return 400;else if (window.innerWidth > 1200) return 580;else return 500;\n        }\n    };\n\n    var ns = 'http://www.w3.org/2000/svg';\n    var img = new Image();\n    var ctx, canvas;\n    var particleCanvas, particleCtx;\n    var canvasParentWidth;\n    var canvasParentHeight;\n    var ending = [];\n    var retractStart = 0;\n    var imgCanvas = function imgCanvas(width, height, img, callback) {\n        //Watch where this is loaded into when portfolio done\n        // document.body.innerHTML += '<canvas id=\"img-canvas\"></canvas>';\n        // canvas = document.getElementById('img-canvas')\n        canvas = document.getElementById('particle');\n        ctx = canvas.getContext(\"2d\");\n\n        canvas.width = width;\n        canvas.height = height;\n        canvasParentWidth = _('svg-page').getBoundingClientRect().width;\n        canvasParentHeight = _('svg-page').getBoundingClientRect().height;\n\n        ctx.drawImage(img, 0, 0, width, height);\n\n        //Calls function for clickable event listener to run and appends background canvas\n        callback(canvas, createParticleCanvas());\n    };\n\n    function createParticleCanvas() {\n\n        // Create our canvas\n        particleCanvas = document.createElement(\"canvas\");\n        particleCtx = particleCanvas.getContext(\"2d\");\n\n        // Size our canvas with additional sizing\n        particleCanvas.width = canvasParentWidth;\n        particleCanvas.height = canvasParentHeight;\n\n        // Position out canvas\n        particleCanvas.style.position = \"absolute\";\n        particleCanvas.style.top = \"0\";\n        particleCanvas.style.left = \"0\";\n\n        // Make sure it's on top of other elements\n        particleCanvas.style.zIndex = \"500\";\n\n        // Make sure other elements under it are clickable\n        particleCanvas.style.pointerEvents = \"none\";\n        var foreignObject = document.createElementNS(ns, \"foreignObject\");\n        foreignObject.setAttribute('class', \"particleObject\");\n        foreignObject.setAttribute('width', canvasParentWidth);\n        foreignObject.setAttribute('height', canvasParentHeight);\n        foreignObject.appendChild(particleCanvas);\n\n        document.querySelector('g.design').appendChild(foreignObject);\n    }\n\n    //Image comes appart\n    var ExplodingParticle = function ExplodingParticle() {\n        var _this2 = this;\n\n        this.begin = 0;\n\n        // Set how long we want our particle to animate for\n        this.animationDuration = 1000; // in ms\n\n        // Set the speed / distance for our particle\n        this.speed = {\n            x: window.innerWidth < 768 ? -5 + Math.random() * 10 : -10 + Math.random() * 20,\n            y: window.innerWidth < 768 ? -5 + Math.random() * 10 : -10 + Math.random() * 20\n        };\n\n        // Size our particle\n        window.innerWidth < 768 ? this.radius = 3 + Math.random() * 3 : this.radius = 4 + Math.random() * 4;\n\n        // Set a max time to live for our particle\n        this.life = 30 + Math.random() * 10;\n        this.remainingLife = this.life;\n\n        // This function will be called by our animation logic later on\n        this.draw = function (ctx) {\n\n            var p = _this2;\n\n            if (_this2.remainingLife > 0 && _this2.radius > 0) {\n\n                // Draw a circle at the current location\n                ctx.beginPath();\n                ctx.arc(p.startX, p.startY, p.radius, 0, Math.PI * 2);\n                ctx.fillStyle = \"rgba(\" + _this2.rgbArray[0] + ',' + _this2.rgbArray[1] + ',' + _this2.rgbArray[2] + \", 1)\";\n                ctx.fill();\n\n                // Update the particle's location and life\n                p.remainingLife--;\n                p.radius -= 0.25;\n                p.startX += p.speed.x;\n                p.startY += p.speed.y;\n            }\n        };\n        this.retract = function (begin, finale, timestamp) {\n\n            if (!retractStart) retractStart = timestamp;\n\n            var runtime = timestamp - retractStart;\n            var progress = Math.min(runtime / 3000, 1);\n\n            // canvas.style.opacity = 1 - progress\n            particleCtx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\n            for (var i = 0; i < begin.length; i++) {\n                var start = begin[i];\n                var end = finale[i];\n\n                var distX = Math.abs(start.startX - end.x);\n                var distY = Math.abs(start.startY - end.y);\n\n                //If end x or y is greater than x or y subtract else add\n                start.x = start.startX > end.x ? start.startX - distX * progress : start.startX + distX * progress;\n                start.y = start.startY > end.y ? start.startY - distY * progress : start.startY + distY * progress;\n                start.rad = start.begin + end.rad * progress;\n\n                particleCtx.beginPath();\n\n                particleCtx.arc(start.x, start.y, start.rad, 0, Math.PI * 2);\n                particleCtx.fillStyle = \"rgba(\" + start.rgbArray[0] + ',' + start.rgbArray[1] + ',' + start.rgbArray[2] + ',' + start.rgbArray[3] + \")\";\n\n                particleCtx.fill();\n            }\n            if (progress === 1) {\n                //returns the photo back if ran again\n                return;\n            }\n\n            requestAnimationFrame(function (timestamp) {\n                this.retract(begin, finale, timestamp);\n            }.bind(_this2));\n        };\n    };\n\n    var particles = [];\n\n    function createParticleAtPoint(x, y, colorData) {\n        var particle = new ExplodingParticle();\n\n        particle.rgbArray = colorData;\n        particle.startX = x;\n        particle.startY = y;\n        particle.startTime = Date.now();\n\n        particles.push(particle);\n        var end = {};\n        end.start = 0;\n        end.rad = particle.radius;\n        end.x = x;\n        end.y = y;\n        ending.push(end);\n    }\n\n    var opac = 1;\n    function update() {\n        if (typeof particleCtx !== \"undefined\") {\n            particleCtx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        }\n        //image fades as it's breaking apart\n        canvas.style.opacity = opac = opac - .08;\n\n        // Draw all of our particles in their new location\n        for (var i = 0; i < particles.length; i++) {\n\n            particles[i].draw(particleCtx);\n\n            // When particles \n            if (particles[i].radius < 0) {\n                var percent = (Date.now() - particles[i].startTime) / particles[i].animationDuration;\n                var dur = sizing('dur');\n\n                if (percent > dur) {\n\n                    var particle = new ExplodingParticle();\n\n                    particle.retract(particles, ending);\n\n                    return;\n                }\n            }\n        }\n        window.requestAnimationFrame(update);\n    }\n\n    var clearData = function clearData() {\n        retractStart = null;\n        canvas.removeAttribute('style');\n        particleCtx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n        ending = [];\n        particles = [];\n    };\n\n    img.onload = function () {\n        var width = sizing('img');\n        var height = width;\n        imgCanvas(width, height, this, runEvents);\n    };\n    img.src = 'images/design-img.png';\n\n    function runEvents(imgCanvas) {\n        var foreignObject = document.querySelector('.design .item-canvas');\n\n        var imageLeft = parseInt(foreignObject.getAttribute('x'));\n        var imageTop = parseInt(foreignObject.getAttribute('y'));\n        // let reductionFactor = window.width <= 400 ? 15 : Math.round(imgCanvas.width / 15)\n        if (window.innerWidth < 600) var reductionFactor = 15;\n        if (window.innerWidth >= 600) var reductionFactor = 22;\n        if (window.innerWidth >= 1200) var reductionFactor = 33;\n\n        //Removes canvas with particles made from when closing svg page\n        _('close-btn').addEventListener('click', clearData);\n\n        imgCanvas.addEventListener('click', function (e) {\n            if (e.target.style.opacity) {\n\n                return clearData();\n            }\n\n            //width first one pixel, then all of height pixels, width another pixel then all of height pixels \n            var rgbaData = ctx.getImageData(0, 0, this.width, this.height).data;\n            var count = 0;\n            for (var x = 0; x < this.width; x++) {\n                for (var y = 0; y < this.height; y++) {\n\n                    if (count % reductionFactor === 0) {\n\n                        var index = (y * this.width + x) * 4;\n                        var rgbaColorArr = rgbaData.slice(index, index + 4);\n\n                        var globalX = imageLeft + x;\n                        var globalY = imageTop + y;\n\n                        createParticleAtPoint(globalX, globalY, rgbaColorArr);\n                    }\n                    count++;\n                }\n            }\n            update();\n        });\n    }\n}\nImageShatter();\n\nfunction StarryNight() {\n\n    var canvas = document.getElementById('starryNight');\n    var ctx = canvas.getContext('2d');\n    var data = [];\n    var trailData = [];\n    var rgb = trailData.length > 1 && 150 / trailData.length;\n    var j = 0;\n    var houseWidth = window.innerWidth < 768 ? 380 : 600;\n    var houseHeight = newSize('width', houseWidth).height;\n    this.width = canvas.width = _('svg-page').getAttribute('width');\n    this.height = canvas.height = _('svg-page').getAttribute('height');\n    this.toggle = true;\n\n    this.images = [];\n\n    //Men Data\n    var menData = {\n        headArc: window.innerWidth < 768 ? 4 : 6,\n        stepDown: window.innerWidth < 768 ? 12 : 17,\n        rotatedPos: 0,\n        rotateDegree: 14,\n        j: 0, //Each point of animation, walk, stand still, rotate ,falling\n        start: 0,\n        begin: 0,\n        lastPosX: 90,\n        lastPosY: undefined,\n        arcStartX: window.innerWidth < 768 ? 7 : 10,\n        arcStartY: 5\n\n        //House animation Data\n    };this.house = {\n        houseImg: undefined,\n        toggle: undefined,\n        currentY: undefined,\n        start: 0,\n        right: this.width - houseWidth,\n        bottom: this.height - houseHeight,\n        startY: function startY() {\n            return this.bottom + houseWidth / 2.4;\n        },\n        startX: function startX() {\n            return this.right;\n        },\n        begin: function begin() {\n            menData.lastPosY = houseHeight / 2.24 - starryNight.images[0].height;\n            ctx.drawImage(this.houseImg, this.startX(), this.startY(), houseWidth, houseHeight);\n        },\n        rise: this.height / 2,\n        moveLeft: window.innerWidth < 500 ? this.width / 20 : this.width / 8\n\n        //Star Trail Data\n    };var lastPosition = function lastPosition(xPos, yPos, radius, alpha) {\n        trailData.push({\n            x: xPos,\n            y: yPos,\n            radius: radius,\n            alpha: alpha\n        });\n        if (trailData.length > 25) trailData.shift();\n    };\n\n    this.randomMax = function (min, max) {\n        return Math.floor(Math.random() * (max - min) + min);\n    };\n\n    //Adds data for Shooting star\n    this.addData = function () {\n        for (var i = 0; i < 8; i++) {\n            var measurements = {\n                // Starts randomly on the x axis\n                delay: i === 0 ? 0 : this.randomMax(1, 2),\n                x: this.randomMax(0, this.width / 2),\n                y: this.randomMax(200, this.height),\n                radius: window.innerWidth < 768 ? this.randomMax(5, 13) : this.randomMax(8, 16),\n                distance: this.width + 100,\n                globAlpha: 1,\n                opac: 1,\n                endPos: this.randomMax(100, this.width),\n                start: 0,\n                time: 0,\n                explodeStart: 0,\n                explodeSize: window.innerWidth < 768 ? 20 : 35\n            };\n            data.push(measurements);\n        }\n    }.bind(this);\n\n    //When prototype.toggle = false this automatically gets ran to be able to run animation again\n    this.restoreData = function () {\n        data = [];\n        trailData = [];\n        j = 0;\n        this.addData();\n        menData.begin = null;\n    };\n\n    function drawHouse(image, timestamp) {\n        if (!image.start) image.start = timestamp;\n        var runtime = timestamp - image.start;\n        var progress = runtime / 2000;\n\n        var distance = image.rise * progress;\n\n        //Floating in place\n        if (image.currentY) {\n\n            image.toggle ? image.x = image.currentX - distance : image.x = image.currentX + distance;\n            image.toggle ? image.y = image.currentY + distance : image.y = image.currentY - distance;\n        }\n\n        if (distance >= image.rise) {\n            //Makes currentY true and updates postion of the image\n            image.currentY = image.y;\n            image.currentX = image.x;\n            image.toggle ? image.toggle = false : image.toggle = true;\n            image.start = 0;\n            image.rise = 50;\n        }\n        //Ends the first rise of the image\n        if (!image.currentY) {\n            image.x = image.startX() - image.moveLeft * progress;\n            image.y = image.startY() - image.rise * progress;\n        }\n\n        ctx.drawImage(image.houseImg, image.x, image.y, houseWidth, houseHeight);\n    }\n\n    function drawStars(cir) {\n        ctx.save();\n        ctx.globalAlpha = cir.alpha;\n\n        ctx.beginPath();\n        ctx.arc(cir.xPos, cir.yPos, cir.radius, 0, 2 * Math.PI);\n        ctx.fillStyle = 'rgba(255, 255, 73, ' + cir.opacity + ')';\n        ctx.fill();\n        ctx.restore();\n        lastPosition(cir.xPos, cir.yPos, cir.radius, cir.alpha);\n    }\n\n    function drawTrail(trail) {\n        ctx.save();\n        ctx.globalAlpha = 0.2;\n        ctx.beginPath();\n        ctx.arc(trail.x, trail.y, trail.rad, 0, 2 * Math.PI, true);\n        ctx.fillStyle = 'rgba(238,' + trail.color + ', 6, ' + trail.fade + ')';\n        ctx.fill();\n        ctx.restore();\n    }\n    function drawExplosion(circle, timestamp) {\n\n        if (!circle.explodeStart) circle.explodeStart = timestamp;\n        var runtime = timestamp - circle.explodeStart;\n        var progress = runtime / 400;\n        var ease = easeOut(progress);\n        ctx.beginPath();\n        ctx.arc(circle.xPos, circle.yPos, 0 + circle.explodeSize * ease, 0, 2 * Math.PI, true);\n        ctx.fillStyle = 'rgba(249, 255, 0, ' + (1 - .9 * progress) + ')';\n        ctx.fill();\n    }\n    function drawMen(men) {\n\n        if (menData.j >= 4 && menData.j <= 5) {\n            ctx.translate(men.translateX, men.translateY);\n            ctx.rotate(men.rotate * Math.PI / 180);\n            ctx.drawImage(men.img, -men.width / 2, -men.height, men.width, men.height);\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n        } else {\n            ctx.save();\n            ctx.globalAlpha = men.opac;\n            ctx.beginPath();\n            ctx.arc(men.arcX, men.arcY, men.arcRadius, 0, 2 * Math.PI);\n            ctx.fillStyle = \"#000\";\n            ctx.fill();\n            ctx.drawImage(men.img, men.x, men.y, men.width, men.height);\n            ctx.restore();\n        }\n    }\n\n    var draw = function (timestamp) {\n        if (!StarryNight.prototype.toggle) {\n            return this.restoreData();\n        }\n\n        //House\n        var image = this.house;\n\n        ctx.clearRect(0, 0, this.width, this.height);\n\n        //Men running start , Stars start after house gets to top. \n        if (image.currentY) {\n\n            //**  START OF STARS  **/\n\n            // Draws the trail opacity  \n            if (menData.j >= 1) {\n                for (var i = 0; i < trailData.length; i++) {\n                    var trail = trailData[i];\n                    var fadeSize = i / trailData.length;\n\n                    //Trail tapers as it goes.\n                    var radiusTaper = (trail.radius - 2) / trailData.length;\n                    trail.color = 240 - (i + j);\n                    trail.fade = i / trailData.length;\n\n                    //Tapers down the raidus of the trail\n                    trail.rad = trail.radius = trail.radius - radiusTaper;\n                    // trail.rad = trail.radius\n                    drawTrail(trail);\n                }\n\n                //Draws stars\n                for (var _i = 0; _i < data.length; _i++) {\n                    var circle = data[_i];\n\n                    if (j >= _i) {\n\n                        if (!circle.start) circle.start = timestamp;\n                        var _runtime = timestamp - circle.start;\n                        var _progress = _runtime / 2000;\n                        var ease = easeOut(_progress);\n                        circle.time = circle.delay - ease;\n\n                        //If the current circle delay = progress draws next circle, (random drawing look)\n                        if (circle.time <= 0) {\n\n                            //current circle set to undefined keep from running again\n                            circle.delay = undefined;\n                            j++;\n                        }\n                        circle.alpha = circle.globAlpha - 1 * _progress;\n                        circle.opacity = circle.opac - .9 * _progress;\n                        // circle.duration = ease\n\n                        if (j % 3 !== 0 && menData.j >= 1) {\n                            circle.xPos = circle.x + circle.endPos * ease;\n                            circle.yPos = 0 + circle.y * ease;\n                            ctx.globalCompositeOperation = 'destination-over';\n                        } else {\n                            circle.xPos = circle.x + circle.endPos * ease;\n                            circle.yPos = 0 + circle.y * _progress;\n                            ctx.globalCompositeOperation = 'source-over';\n                        }\n\n                        drawStars(circle);\n\n                        //Explosion start\n                        if (circle.xPos > image.x && circle.yPos > image.y) {\n\n                            drawExplosion(circle, timestamp);\n                        }\n\n                        if (j === data.length) {\n                            j = 0;\n                            data = [];\n                            trailData = [];\n                            this.addData();\n                        }\n                    }\n                }\n            }\n            //**  START OF MEN  **/\n            var menLength = starryNight.images.length - 1;\n\n            for (var _i2 = 0; _i2 < menLength; _i2++) {\n                var men = starryNight.images[_i2];\n\n                if (!menData.begin) menData.begin = timestamp;\n                var runtime = timestamp - menData.begin;\n                var progress = Math.min(runtime / 2000, 1);\n\n                //First walk out\n                if (menData.j === 0) {\n                    menData.start = parseInt((progress * 15).toFixed(0));\n                    menData.distanceX = window.innerWidth < 768 ? 95 : 205;\n                }\n                //Second Walk stands still\n                if (menData.j === 1) {\n                    //Starts and ends with last dude\n                    menData.start = 15;\n                    // Keeping count at last man instead of counting through them to animate\n                    menData.distanceX = 0;\n                }\n\n                //Third walk down and to the end\n                if (menData.j === 2) {\n                    menData.start = parseInt((progress * 15).toFixed(0));\n                    men.walkDown = Math.min(progress * 6, 1) * menData.stepDown;\n                    // menData.distanceX = 250\n                    menData.distanceX = window.innerWidth < 768 ? 159 : 250;\n                }\n\n                //Looks down\n                if (menData.j === 3) {\n                    var headIterate = Math.min(runtime / 1000, 1);\n\n                    //updates men.walkdown that gets ran before back to 0\n                    men.walkDown = 0;\n                    menData.start = 16;\n                    menData.distanceX = 0;\n                    men.arcX = image.x + (menData.lastPosX + (men.width / 2 + 2)) + menData.arcStartX * headIterate;\n                    men.arcY = image.y + (menData.lastPosY + 4) + menData.arcStartY * headIterate;\n                    men.arcRadius = menData.headArc;\n                }\n                //Rotates back and forth\n                if (menData.j === 4) {\n                    //2nd rotated position\n                    var newRotatedPos = menData.rotatedPos - (menData.rotateDegree * iterate - menData.rotatedPos);\n                    menData.start = 14;\n\n                    menData.distanceX = 0;\n\n                    men.translateX = image.x + (menData.lastPosX + men.width / 1.8);\n                    men.translateY = image.y + (menData.lastPosY + men.height);\n                    var iterate = Math.min(progress * 3, 3);\n\n                    if (menData.rotatedPos <= menData.rotateDegree) {\n                        menData.rotatedPos = menData.rotateDegree * iterate;\n                        men.rotate = menData.rotatedPos;\n                    } else {\n                        //Rotate back and forth\n                        if (newRotatedPos >= 0) men.rotate = newRotatedPos;\n                        if (newRotatedPos <= 0) men.rotate = -newRotatedPos;\n                    }\n\n                    //updates roatedPos for mendata.js = 5 to be used below\n                    if (progress === 1) {\n                        men.arcRadius = 0;\n                        menData.roatedPos = men.rotate;\n                    }\n                }\n                //Falls Down\n                if (menData.j === 5) {\n                    menData.start = parseInt((progress * 10).toFixed(0));\n\n                    men.translateX = image.x + (menData.lastPosX + men.width / 2) + this.width / 6 * progress;\n                    men.translateY = image.y + (menData.lastPosY + men.height) + this.height / 2 * progress;\n                    men.rotate = menData.roatedPos + 180 * progress;\n                    menData.distanceX = 0;\n                    if (progress === 1) men.opacity = 0;\n                }\n                if (menData.j === 6) {\n\n                    men.opac = men.opacity + 1 * progress;\n                }\n\n                if (men.startPos === menData.start) {\n\n                    //Constanatly updates men location on the House\n                    var lastX = menData.lastPosX + menData.distanceX * progress;\n                    var lastY = menData.lastPosY + (men.walkDown || 0);\n\n                    men.x = image.x + (menData.lastPosX + menData.distanceX * progress);\n                    men.y = image.y + (menData.lastPosY + (men.walkDown || 0));\n\n                    drawMen(men);\n\n                    if (progress < 1) {} else {\n                        //Resets or updates positions\n                        menData.lastPosX = lastX;\n                        menData.lastPosY = lastY;\n                        menData.j++;\n                        menData.begin = 0;\n                        menData.start = 0;\n                    }\n                }\n            }\n        };\n        drawHouse(image, timestamp);\n\n        requestAnimationFrame(draw);\n    }.bind(this);\n\n    document.querySelector('.animations .start-canvas').addEventListener('click', function () {\n\n        StarryNight.prototype.toggle = true;\n        requestAnimationFrame(draw);\n    }.bind(this));\n\n    document.querySelector('.animations .stop-canvas').addEventListener('click', function () {\n\n        StarryNight.prototype.toggle = false;\n    });\n}\n\nStarryNight.prototype.loadImages = function () {\n    var height = window.innerWidth < 768 ? 60 : 80;\n    var width = window.innerWidth < 768 ? 48 : 64;\n    var $this = this;\n    var count = 0;\n    var images = [];\n    var ext = isFirefox ? \"png\" : \"svg\";\n\n    var men = [{ src: \"images/men/zero.\" + ext, height: height, width: width }, { src: \"images/men/one.\" + ext, height: height, width: width }, { src: \"images/men/two.\" + ext, height: height, width: width }, { src: \"images/men/three.\" + ext, height: height, width: width }, { src: \"images/men/four.\" + ext, height: height, width: width }, { src: \"images/men/five.\" + ext, height: height, width: width }, { src: \"images/men/six.\" + ext, height: height, width: width }, { src: \"images/men/seven.\" + ext, height: height, width: width }, { src: \"images/men/eight.\" + ext, height: height, width: width }, { src: \"images/men/nine.\" + ext, height: height, width: width }, { src: \"images/men/ten.\" + ext, height: height, width: width }, { src: \"images/men/eleven.\" + ext, height: height, width: width }, { src: \"images/men/twelve.\" + ext, height: height, width: width }, { src: \"images/men/thirteen.\" + ext, height: height, width: width }, { src: \"images/men/fourteen.\" + ext, height: height, width: width }, { src: \"images/men/fifteen.\" + ext, height: height, width: width }, { src: \"images/men/headless.\" + ext, height: height, width: width }, { src: \"images/men/house-floating.\" + ext }];\n\n    for (var i = 0; i < men.length; i++) {\n\n        var img = new Image();\n\n        try {\n            throw i;\n        } catch (i) {\n            img.onload = function () {\n\n                images.push({\n                    img: this,\n                    height: men[i].height,\n                    width: men[i].width,\n                    start: 0,\n                    startPos: i\n                });\n\n                if (++count === men.length) {\n\n                    //Sorts the men array in order due to loading images differently\n                    images.sort(function (a, b) {\n                        return a.startPos - b.startPos;\n                    });\n\n                    starryNight.images = images;\n                    //updates the undefined house property with this img\n                    $this.house.houseImg = img;\n                    $this.addData();\n                    $this.house.begin();\n                }\n            };\n            img.src = men[i].src;\n        }\n    }\n};\n\nvar Technologies = function Technologies() {\n    var svgPageWidth = _('svg-page').getAttribute('width');\n    var svgPageHeight = _('svg-page').getAttribute('height');\n    var width = svgPageWidth < 970 || svgPageHeight < 800;\n    this.canvas = document.getElementById('techIcons');\n\n    this.ctx = this.canvas.getContext('2d');\n    this.width = this.canvas.width = svgPageWidth;\n    this.height = this.canvas.height = svgPageHeight;\n    this.start = 0;\n    this.start;\n    this.bodyData = [];\n    this.icons;\n    this.j = 0;\n    var newTechnologies = this;\n    this.data = {\n        addBodyData: function addBodyData() {\n\n            if (width) {\n                //Body location X and Y\n                return {\n                    x: newTechnologies.width / 2 - newTechnologies.bodyData[1].width / 2.2,\n                    y: newTechnologies.height - newTechnologies.bodyData[1].height,\n                    translateX: newTechnologies.width / 2 - newTechnologies.bodyData[3].width / 2 + 60,\n                    translateY: newTechnologies.height - newTechnologies.bodyData[1].height + 70,\n                    headX: newTechnologies.width / 2 - newTechnologies.bodyData[1].width / 2.2 + 41,\n                    headY: newTechnologies.height - newTechnologies.bodyData[1].height - 61\n                };\n            } else {\n                return {\n                    x: newTechnologies.width / 2 - newTechnologies.bodyData[1].width / 2.2,\n                    y: newTechnologies.height - newTechnologies.bodyData[1].height,\n                    //Translate head rotation\n                    translateX: newTechnologies.width / 2 - newTechnologies.bodyData[3].width / 2 + 85,\n                    //Translate head rotation\n                    translateY: newTechnologies.height - newTechnologies.bodyData[1].height + 100,\n                    headX: newTechnologies.width / 2 - newTechnologies.bodyData[1].width / 2.2 + 57,\n                    headY: newTechnologies.height - newTechnologies.bodyData[1].height - 87\n                };\n            }\n        },\n        rotate: -140,\n        j: 0,\n        bookHeight: 200\n    };\n\n    this.sprites = [];\n\n    var ext = isFirefox ? \"png\" : \"svg\";\n\n    var bodyWidth = width ? 1.3 : 1.8;\n    var bodyHeight = width ? 1.3 : 1.8;\n    var src = [\"images/top-head.\" + ext, \"images/face-body.\" + ext, \"images/book.\" + ext, \"images/full-body.\" + ext];\n\n    if (width) {\n\n        var imgWidth = [284.5, 400, 320.96, 400];\n        var imgHeight = [170.9, 483.7, 226.8, 564.66];\n    } else {\n        var imgWidth = [553.5, 778.2, 629.9, 778];\n        var imgHeight = [332.49, 941, 443.27, 1098.9];\n    }\n\n    this.imgIcons = [{ src: \"images/icons/adobe-50-50.\" + ext, width: 40, height: 40 }, { src: \"images/icons/after-effects-52-52.\" + ext, width: 40, height: 40 }, { src: \"images/icons/artistic-52-54.\" + ext, width: 40, height: 42 }, { src: \"images/icons/bootstrap-50-50.\" + ext, width: 40, height: 40 }, { src: \"images/icons/camera-52-52.\" + ext, width: 40, height: 40 }, { src: \"images/icons/cloud-64-49.5.\" + ext, width: 42, height: 32.5 }, { src: \"images/icons/code-60-53.\" + ext, width: 43, height: 38 }, { src: \"images/icons/css-55-52.\" + ext, width: 42, height: 39.8 }, { src: \"images/icons/design-52-52.\" + ext, width: 40, height: 40 }, { src: \"images/icons/git-hub-55-55.\" + ext, width: 43, height: 43 }, { src: \"images/icons/google-drive-72-64.\" + ext, width: 46, height: 40.8 }, { src: \"images/icons/illustrator-52-52.\" + ext, width: 40, height: 40 }, { src: \"images/icons/js-55-56.\" + ext, width: 41, height: 42 }, { src: \"images/icons/node-50-50.\" + ext, width: 40, height: 40 }, { src: \"images/icons/nodejs-60.5-37.\" + ext, width: 55, height: 33.6 }, { src: \"images/icons/npm-70-27.2.\" + ext, width: 65, height: 25.2 }, { src: \"images/icons/photoshop-52-52.\" + ext, width: 40, height: 40 }, { src: \"images/icons/php-65-35.\" + ext, width: 45, height: 24.2 }, { src: \"images/icons/python-57-58.\" + ext, width: 40, height: 40.7 }, { src: \"images/icons/react-59-52.\" + ext, width: 42, height: 37 }, { src: \"images/icons/server-55-58.\" + ext, width: 40, height: 40 }];\n\n    this.loopImgs = function () {\n        var load = [];\n\n        for (var j = 0; j < 4; j++) {\n            load.push({\n                src: src[j],\n                width: imgWidth[j] / bodyWidth,\n                height: imgHeight[j] / bodyHeight\n            });\n        }\n        var icons = this.imgIcons;\n\n        for (var i = 0; i < icons.length; i++) {\n            var w = !width ? icons[i].src.replace(/^([a-z\\/]+)\\/([a-z-?]+)-(\\d\\d)(.+)/ig, \"$3\") : icons[i].width;\n            var h = !width ? icons[i].src.replace(/^(.+)(\\d{2})(.+)/ig, \"$2\") : icons[i].height;\n            // console.log(w,h, i);\n            load.push({\n                src: icons[i].src,\n                width: parseInt(w),\n                height: parseInt(h)\n            });\n        }\n        return load;\n    };\n    function random(min, max) {\n        return Math.floor(Math.random() * (max - min) + min);\n    };\n    this.addData = function (n) {\n        var icons = this.icons;\n        for (var i = 0; i < n; i++) {\n\n            this.sprites.push({\n                //Each icon draws for ever 30 mil sec\n                timing: 30,\n                endX: random(0, this.width / 2),\n                endY: random(0, this.height - (this.bodyData[1].height + 50)),\n                start: 0,\n                speed: random(4000, 9000),\n                x: this.width / 2,\n                y: this.data.addBodyData().y + 15, // plus 100 the sprite size\n                img: this.icons[i % icons.length].img,\n                width: this.icons[i % icons.length].width,\n                height: this.icons[i % icons.length].height,\n                X: 0,\n                Y: 0,\n                staticSpeed: 0,\n                rotate: random(180, 1440)\n            });\n        }\n    };\n};\n\nTechnologies.prototype.rotateHead = function (rotate, pos) {\n\n    var img = this.bodyData;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.drawImage(img[1].img, pos.x, pos.y, img[1].width, img[1].height); //Face body\n    this.ctx.translate(pos.translateX, pos.translateY); // Translate \n    this.ctx.rotate(rotate * Math.PI / 180);\n    this.ctx.translate(-pos.translateX, -pos.translateY); // Translate back\n    this.ctx.drawImage(img[0].img, pos.headX, pos.headY, img[0].width, img[0].height); //Head draw in translated canves\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\nTechnologies.prototype.drawBook = function (data, pos) {\n    var img = this.bodyData;\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    this.ctx.globalCompositeOperation = 'destination-over';\n    this.ctx.drawImage(img[1].img, pos.x, pos.y, img[1].width, img[1].height); //Face body\n    this.ctx.translate(pos.translateX, pos.translateY); // Translate \n    this.ctx.rotate(-140 * Math.PI / 180);\n    this.ctx.translate(-pos.translateX, -pos.translateY); // Translate back\n    this.ctx.drawImage(img[0].img, pos.headX, pos.headY, img[0].width, img[0].height); //Head draw in translated canves\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    this.ctx.translate(pos.translateX + img[2].width / 2, pos.translateY); // Translate  \n    this.ctx.scale(data.scale, data.scale); //Scales book\n    this.ctx.translate(-pos.translateX - img[2].width / 2, -pos.translateY); // Translate back for\n    this.ctx.drawImage(img[2].img, data.bookX, data.bookY, img[2].width, img[2].height); //book image\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\nTechnologies.prototype.drawBody = function (data, pos) {\n    var img = this.bodyData;\n\n    this.ctx.drawImage(img[1].img, pos.x, pos.y, img[1].width, img[1].height); //Face body\n    this.ctx.translate(pos.translateX, pos.translateY); // Translate \n    this.ctx.rotate(-140 * Math.PI / 180);\n    this.ctx.translate(-pos.translateX, -pos.translateY); // Translate back\n    this.ctx.drawImage(img[0].img, pos.headX, pos.headY, img[0].width, img[0].height); //Head draw in translated canves\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n    this.ctx.translate(pos.translateX + img[2].width / 2, pos.translateY); // Translate  \n    this.ctx.scale(1.05, 1.05);\n    this.ctx.translate(-pos.translateX - img[2].width / 2, -pos.translateY); // Translate back\n    this.ctx.drawImage(img[2].img, data.bookX, data.bookY, img[2].width, img[2].height); //book image\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\nTechnologies.prototype.drawIcons = function (spr) {\n    this.ctx.setTransform(1, 0, 0, 1, spr.X, spr.Y);\n    this.ctx.rotate(spr.turn * Math.PI / 180);\n    this.ctx.drawImage(spr.img, -spr.width / 2, -spr.height / 2, spr.width, spr.height);\n    this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\nTechnologies.prototype.draw = function (timestamp) {\n    if (!this.toggle) return;\n    var width = this.width < 970 || this.height < 800;\n    var img = this.bodyData;\n    var data = this.data;\n    var pos = data.addBodyData();\n\n    if (!this.start) this.start = timestamp;\n    var runtime = timestamp - this.start;\n    var progress = Math.min(runtime / 1000, 1);\n\n    if (progress < 1 && data.j <= 1) {\n\n        if (width) {\n            //Updates x loactions and y location of book\n            data.bookX = pos.translateX - 40 - 0;\n            data.bookY = pos.translateY - 110 - 60 * progress;\n        } else {\n            //Updates x loactions and y location of book\n            data.bookX = pos.translateX - 60 - 0;\n            data.bookY = pos.translateY - 180 - 60 * progress;\n        }\n        //Rotate head\n        if (data.j === 0) {\n\n            var rotate = data.rotate * progress;\n            this.rotateHead(rotate, pos);\n        }\n        //PUsh up book\n        if (data.j === 1) {\n\n            data.scale = .5 + .55 * progress;\n            this.drawBook(data, pos);\n        }\n    } else {\n\n        //Draw Icons\n        if (data.j === 2) {\n            this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            this.drawBody(data, pos);\n\n            var sprites = this.sprites.length;\n\n            for (var i = 0; i < sprites; i++) {\n\n                var spr = this.sprites[i];\n\n                if (i <= this.j) {\n\n                    spr.staticSpeed++;\n\n                    if (!spr.start) spr.start = timestamp;\n                    var run = timestamp - spr.start;\n                    var prog = run / spr.speed;\n\n                    if (i % 2) {\n                        //left up\n                        spr.X = spr.x - spr.endX * prog;\n                        spr.Y = spr.y - spr.endY * prog;\n                        spr.turn = -spr.rotate * prog;\n                    } else {\n                        //right up;\n                        spr.X = spr.x + spr.endX * prog;\n                        spr.Y = spr.y - spr.endY * prog;\n                        spr.turn = spr.rotate * prog;\n                    }\n\n                    spr.totalX = spr.X;\n                    spr.totalY = spr.Y;\n\n                    if (spr.totalX + spr.width <= 0 || spr.totalY + spr.height <= 0 || spr.totalX > this.width + spr.width) {\n\n                        //Resets values, for same icon to run again\n                        this.sprites[i].start = 0;\n                    }\n                    this.drawIcons(spr);\n                    if (spr.staticSpeed === spr.timing) this.j++;\n                }\n            }\n        } else {\n            this.start = 0;\n            data.j++;\n        }\n    }\n    requestAnimationFrame(this.draw.bind(this));\n};\n\nTechnologies.prototype.loadImages = function () {\n    var $this = this;\n    var counter = 0;\n    var loadedImages = 0;\n    var imgs = [];\n\n    this.loopImgs().forEach(function (image, i) {\n        counter++;\n        var img = new Image();\n\n        img.onload = function () {\n\n            //Width or height doesn't exist updates 0 for it\n            imgs.push({ img: this, i: i, width: image.width, height: image.height });\n\n            if (++loadedImages >= counter) {\n                imgs.sort(function (a, b) {\n                    return a.i - b.i;\n                });\n                //When Icons load full body image gets added\n                $this.ctx.drawImage(imgs[3].img, $this.width / 2 - imgs[1].width / 2.2, $this.height - imgs[3].height, imgs[3].width, imgs[3].height); //Full-body image\n\n                var bodyImgs = imgs.splice(0, 4);\n\n                $this.bodyData = bodyImgs;\n                $this.icons = imgs;\n\n                //Icon data\n                $this.addData(imgs.length);\n            }\n        };\n        img.src = image.src;\n    });\n};\n\nfunction SvgPage() {\n    var svgCloseButton = document.getElementsByClassName('close-btn svg-button')[0];\n    var svgCircle = document.getElementsByClassName('svg-circle')[0];\n    var toggle, btnOpen, event;\n    var hovermap = hoverMap();\n\n    var removeGooey = function removeGooey(e) {\n        setTimeout(function () {\n            hovermap[1](e);\n        }, 1400);\n\n        //    console.log( hovermap[1])\n        //     var dist = hovermap[1](e)[0]; // Position distance of show-icon gooey\n        //     hovermap[0]( dist, true )  // handler(e) function\n    };\n    this.start;\n    //Page animated down removes circle to be animated again\n    this.animateEnd = function (e) {\n        console.log('hey you');\n        _('interactive-container').style.pointerEvents = 'auto';\n\n        if (toggle) {\n            //Safari only\n            _('svg-page').style.visibility = 'hidden';\n            svgCircle.classList.remove('circle-animate');\n\n            _(btnOpen)[0].style.display = 'none';\n            document.querySelector('g.' + btnOpen + ' .items').classList.remove('items-active');\n\n            toggle = false;\n        }\n    };\n\n    this.animateCircle = function (timestamp, elem) {\n\n        if (!this.start) this.start = timestamp;\n\n        var runtime = timestamp - this.start;\n        var progress = Math.min(runtime / this.speed, 1);\n        isFirefox ? svgCircle.setAttribute('r', 1500 * progress) : svgCircle.style.transform = 'scale(' + (0 + 1 * progress) + ')';\n\n        if (progress < 1) {\n            requestAnimationFrame(function (timestamp) {\n                this.animateCircle(timestamp, elem);\n            }.bind(this));\n        } else {\n            //Canvas fades in after page is animated open\n            document.querySelector('g.' + elem + ' .items').classList.add('items-active');\n            document.getElementsByClassName(elem)[1].parentElement.classList.add('showCanvas');\n            this.start = null;\n        }\n    };\n    var closeButtonShow = function closeButtonShow(num) {\n        var opposite = !num ? -56 : 0;\n        _('x-circle').style.transform = 'translateX(' + num + 'px)';\n        _('line')[0].style.transform = 'translateX(' + opposite + 'px) rotate(-45deg)';\n        _('line')[1].style.transform = 'translateX(' + opposite + 'px) rotate(45deg)';\n    };\n\n    // Open page function\n    this.openModals = function (e) {\n\n        try {\n            btnOpen = e.target.id;\n        } catch (err) {\n            btnOpen = e;\n        }\n\n        _('interactive-container').style.pointerEvents = 'none';\n        event = e;\n        _(btnOpen)[0].style.display = 'block';\n        closeButtonShow(-56);\n        //Google 'Do Hyeon' font bug, function has to be ran again in view\n        if (btnOpen === 'photo') slotMachine();\n        //Throbbing Finger image icon\n        if (btnOpen === 'design') document.getElementById('finger').classList.add('finger-scale');\n\n        if (isSafari) {\n\n            toggle = true;\n            _('svg-page').style.visibility = \"visible\";\n            svgCircle.classList.add('circle-animate');\n\n            svgCircle.onanimationend = function () {\n\n                document.querySelector('g.' + btnOpen + ' .items').classList.add('items-active');\n                document.getElementsByClassName(btnOpen)[1].parentElement.classList.add('showCanvas');\n            };\n\n            //Closes the page animated down\n            svgCloseButton.addEventListener('click', function () {\n                toggle = true;\n\n                //Automatically stops canvas \n                Stretch.prototype.toggle = false;\n                slotMachine.prototype.toggle = false;\n                StarryNight.prototype.toggle = false;\n                Technologies.prototype.toggle = false;\n\n                //Canvas / Items fades out\n                document.getElementsByClassName(btnOpen)[1].parentElement.classList.remove('showCanvas');\n            });\n        } else {\n            toggle = false;\n\n            requestAnimationFrame(function (timestamp) {\n                this.speed = 600;\n                this.animateCircle(timestamp, btnOpen);\n            }.bind(this));\n\n            svgCloseButton.addEventListener('click', function (e) {\n                closeButtonShow(0);\n                Stretch.prototype.toggle = false;\n                slotMachine.prototype.toggle = false;\n                StarryNight.prototype.toggle = false;\n                Technologies.prototype.toggle = false;\n                document.getElementsByClassName(btnOpen)[1].parentElement.classList.remove('showCanvas');\n\n                setTimeout(function () {\n                    isFirefox ? _('svg-circle').setAttribute('r', 0) : _('svg-circle').style.transform = 'scale(0)';\n\n                    //Current SVG element hides\n                    document.getElementsByClassName(btnOpen)[0].style.display = 'none';\n                    document.querySelector('g.' + btnOpen + ' .items').classList.remove('showCanvas');\n                    // document.getElementsByClassName(btnOpen)[1].parentElement.classList.remove('showCanvas')\n                }, 1900);\n            });\n        }\n    }.bind(this);\n\n    var popUpCards = function () {\n        var open_modals = this.openModals;\n\n        var popUpcards = _('card-popups');\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = popUpcards[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var cards = _step.value;\n\n                cards.addEventListener('click', function (e) {\n                    removeGooey(e);\n                    open_modals(this.attributes[3].value);\n                });\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }.bind(this);\n    if (wW < 768) popUpCards();\n\n    _('circle-thumbnails').addEventListener('click', function (e) {\n        if (wW < 768) {\n            hovermap[1](e);\n        } else {\n            removeGooey(e);\n            this.openModals(e);\n        }\n    }.bind(this));\n};\n//Add to window object to be used for html page onend function\nwindow.svgPage = new SvgPage();\n\nfunction getPos(ele) {\n\n    var elemRect = ele.getBoundingClientRect();\n    var mainSvg = document.getElementsByClassName('svg-page')[0].getBoundingClientRect();\n    var elemLeft = (mainSvg.width - (parseInt(ele.getAttribute('width')) || elemRect.width)) / 2;\n\n    return {\n        width: elemRect.width,\n        mainSvg: mainSvg,\n        left: elemRect.left,\n        top: elemRect.top,\n        height: elemRect.height,\n        //Places image's property left to the center of it's container (center of page)\n        centeredLeft: elemLeft\n    };\n};\n\n//Different screen sizing , elements adjust to it\nfunction adjustElements() {\n    var pathD768 = \"M565.1,0v900H0c0,0,0-75.3,0-192.4c0-211.7,0-303.7,0-533.1C0,50.5,0,0,0,0H565.1z\";\n    var pathD400 = \"M390,800H0c0,0,0-87.3,0-161.3S0,84,0,47.3S0,0,0,0h390V800z\";\n    var smallSplines = \".42 0 1 1;.42 0 1 1;.42 0 1 1;.42 0 1 1;\";\n    var smallKeyTimes = \"0; 0.20; 0.45; 1\";\n    var svg = document.getElementsByClassName('svg-page')[0];\n\n    //Sets sizing for opening closing svg-page wave\n    if (wH < 840 && wW) {\n        var svgWidth = wW < 500 ? wW - 20 : wW - 50;\n        var svgHeight = wH < 680 ? wH - 15 : wH - 50;\n    } else {\n        var svgWidth = wW < 500 ? wW - 20 : wW - 50;\n        var svgHeight = 840;\n    }\n\n    if (wW <= 615) {\n        document.getElementById('path').setAttribute('d', pathD768);\n        _('path').setAttribute('values', animate768);\n        _('path').setAttribute('keyTimes', smallKeyTimes);\n        _('path').setAttribute('keySplines', smallSplines);\n    }\n\n    if (wW <= 400) {\n        document.getElementById('path').setAttribute('d', pathD400);\n        _('path').setAttribute('values', animate400);\n    }\n\n    if (wW >= 970 && wH) {\n\n        svg.setAttribute(\"height\", svgHeight);\n    } else {\n        if (wH > 840) {\n\n            svg.setAttribute(\"viewBox\", \"0 0 \" + \" \" + svgWidth + \" \" + svgHeight);\n            svg.setAttribute(\"width\", svgWidth);\n            svg.setAttribute(\"height\", svgHeight);\n        }\n        if (wH < 840) {\n            svg.setAttribute(\"viewBox\", \"0 0 \" + \" \" + svgWidth + \" \" + svgHeight);\n            svg.setAttribute(\"width\", svgWidth);\n            svg.setAttribute(\"height\", svgHeight);\n        }\n    }\n\n    if (wW && wH) {\n\n        //Add to element when more canvases are added to HTML\n        var elementG = document.querySelectorAll('g.photo, g.developer, g.design, g.animations, g.technologies');\n\n        elementG.forEach(function (el, i) {\n            var groupName = el.classList[0];\n\n            if (groupName === 'photo') {\n                var canvas = document.getElementById('slot-machine');\n                document.getElementById('canvas-area').setAttribute('transform', 'translate(157, 0)');\n\n                Array.prototype.forEach.call(el.children, function (elem, i) {\n\n                    //Camera SVG\n                    if (i === 0) {\n\n                        var newHeight = newSize('width', 700, elem).height;\n\n                        elem.setAttribute('width', 700);\n                        elem.setAttribute('height', newHeight);\n\n                        var _pos = getPos(elem);\n                        var setAttributeY = _pos.mainSvg.height - newHeight - 5;\n\n                        elem.setAttribute('x', _pos.centeredLeft);\n                        elem.setAttribute('y', setAttributeY);\n\n                        if (wW <= 500 || wH <= 800) {\n\n                            elem.style.visibility = 'hidden';\n                        }\n                    }\n                    //ForeignObject holds canvas\n                    if (i === 2) {\n\n                        if (wW < 970) {\n                            var canvasArea = document.getElementById('canvas-area');\n\n                            var _pos2 = getPos(canvasArea);\n\n                            if (wH < 640 && wW < 800) {\n\n                                elem.setAttribute('y', 240);\n                            } else {\n\n                                //firefox\n                                !isFirefox ? elem.setAttribute('y', svg.getAttribute('height') - _pos2.height - 16) : svg.getAttribute('width') / 2 - 397.6 / 2;\n                                elem.setAttribute('y', svg.getAttribute('height') - 397.6 - 16);\n                                // elem.setAttribute('y', 250)\n                            }\n\n                            elem.setAttribute('width', 360);\n                            elem.setAttribute('height', 360);\n                            !isFirefox ? elem.setAttribute('x', _pos2.left - 6) : elem.setAttribute('x', svg.getAttribute('width') / 2 - 397.6 / 2 + 20);\n                            // elem.setAttribute('y', svg.getAttribute('height') - pos.height - 16)\n                        } else {\n                            var posHeight = getPos(elem);\n                            var width = parseInt(elem.getAttribute('width'));\n                            var elemLeft = posHeight.mainSvg.width - width - 15;\n\n                            elem.setAttribute('y', 60);\n                            elem.setAttribute('x', elemLeft);\n                        }\n\n                        if (wW <= 500) {\n                            var _thisPos = getPos(elem);\n                            elem.setAttribute('x', _thisPos.centeredLeft);\n\n                            if (wH < 620) {\n                                elem.setAttribute('y', 200);\n                            }\n                        }\n                    }\n                    //Items\n                    if (i === 1) {\n                        var pos = getPos(document.getElementById('canvas-area'));\n\n                        elem.childNodes[1].setAttribute('width', 400);\n                        elem.childNodes[1].setAttribute('height', 235);\n                        elem.childNodes[1].setAttribute('x', 20);\n                        if (wW < 970) {\n                            elem.childNodes[1].setAttribute('y', 0);\n                        } else {\n                            elem.childNodes[1].setAttribute('y', 100);\n                        }\n                        if (window.innerWidth <= 500) {\n                            elem.childNodes[1].setAttribute('width', 335);\n                            elem.childNodes[1].setAttribute('x', 10);\n                            var thisPos = getPos(elem.childNodes[1]);\n                        }\n                    }\n                });\n            };\n            if (groupName === 'developer') {\n                Array.prototype.forEach.call(el.children, function (elem, i) {\n\n                    //foreignObject holds canvas\n                    if (i === 1) {\n                        if (wW < 970) {\n                            elem.setAttribute('width', 400);\n                            elem.setAttribute('height', 375);\n                        }\n                        var pos = getPos(el.children[0]);\n                        elem.setAttribute('y', 200);\n\n                        if (window.innerWidth <= 850) {\n                            if (wH < 690) {\n                                elem.setAttribute('y', 25);\n                                elem.setAttribute('x', 5);\n                            } else {\n                                elem.setAttribute('x', 50);\n                                elem.setAttribute('y', 75);\n                            }\n                        }\n                        if (window.innerWidth < 505) {\n                            if (wH < 690) {\n                                elem.setAttribute('y', 50);\n                                elem.setAttribute('x', 0);\n                            }\n                            elem.childNodes[1].setAttribute('width', 360);\n                            elem.setAttribute('height', 375);\n\n                            var thisPos = getPos(elem.childNodes[1]);\n                            elem.setAttribute('y', 50);\n                            elem.setAttribute('x', 5);\n                        }\n                    }\n                    //items\n                    if (i === 0) {\n                        if (window.innerWidth < 505) {\n                            elem.childNodes[1].setAttribute('x', 10);\n                            elem.childNodes[1].setAttribute('y', 424);\n                            elem.childNodes[1].setAttribute('width', 370);\n                        }\n                        if (wW > 505 && wW < 850) {\n                            if (wH < 690) {\n                                elem.childNodes[1].setAttribute('y', 425);\n                                elem.childNodes[1].setAttribute('width', 370);\n                            } else elem.childNodes[1].setAttribute('y', 460);\n                        }\n                    }\n                });\n            }\n            if (groupName === 'design') {\n                var items = el.children[0].children[0];\n                var canvasArea = el.children[1];\n\n                if (wH && wW > 970) {\n\n                    if (canvasArea) {\n                        if (wW > 1200) {\n                            canvasArea.setAttribute('width', 580);\n                            canvasArea.setAttribute('height', 580);\n                        }\n                        canvasArea.setAttribute('y', 80);\n                    }\n                    if (items) {\n                        items.setAttribute('y', 200);\n                    }\n                } else if (wW > 750 && wW < 970) {\n\n                    if (canvasArea) {\n                        //For Safari overflow not working\n                        wW < 810 ? canvasArea.setAttribute('x', 210) : canvasArea.setAttribute('x', 255);\n                        canvasArea.setAttribute('y', 160);\n                        if (wH < 703) {\n                            //For Safari overflow not working\n                            canvasArea.setAttribute('height', 450);\n                        }\n                    }\n                    if (items) {\n                        items.setAttribute('y', 0);\n                    }\n                } else {\n                    items.setAttribute('y', 0);\n                    items.setAttribute('x', 10);\n                    wH < 700 ? items.setAttribute('height', 250) : items.setAttribute('height', 260);\n                    items.setAttribute('width', 340);\n\n                    var height = items.getAttribute('height');\n                    canvasArea.setAttribute('y', height);\n\n                    wW < 600 ? canvasArea.setAttribute('width', 400) : canvasArea.setAttribute('width', 500);\n                    wW < 600 ? canvasArea.setAttribute('height', 400) : canvasArea.setAttribute('height', 500);\n\n                    var canvasPos = getPos(canvasArea);\n                    canvasArea.setAttribute('x', canvasPos.centeredLeft);\n                    //For safari, so photo doesn't show the overflow\n                    canvasArea.setAttribute('height', svg.getAttribute('height') - items.getAttribute('height'));\n                }\n            }\n            if (groupName === 'animations') {\n                var items = el.children[0].children[0];\n                var canvasArea = el.children[1];\n                var svgPageHeight = svg.getAttribute('height');\n\n                if (wH && wW > 970) {\n                    canvasArea.setAttribute('height', svgPageHeight);\n                }\n                if (wW < 768) {\n                    var _bottom = (svg.getAttribute('height') - 310) / 2;\n                    items.setAttribute('x', 15);\n                    items.setAttribute('y', _bottom);\n                    items.setAttribute('height', 320);\n                    items.setAttribute('width', 370);\n                } else {\n                    canvasArea.setAttribute('height', svgPageHeight);\n                }\n            }\n            if (groupName === 'technologies') {\n                var items = el.children[0].children[0];\n                var canvasArea = el.children[1];\n\n                if (wW < 650 && wH < 655) {\n                    var bottom = (svg.getAttribute('height') - 370) / 2;\n                    items.setAttribute('y', bottom);\n                    items.setAttribute('x', 5);\n                }\n            }\n        });\n    }\n};\n\nif (wW < 970 || wH < 800) {\n    adjustElements();\n} else {\n    //Adds margin between full height threshhold for svg-page\n    if (wH < 840) {\n        _('svg-page').setAttribute('height', wH - 40);\n    }\n    if (wW < 1000) {\n        _('svg-page').setAttribute('width', wW - 40);\n    }\n    var designCanvas = document.querySelector('.design .item-canvas');\n    designCanvas.setAttribute('width', 580);\n    designCanvas.setAttribute('height', 580);\n}\n\n//Moves close button to right of svg-page\nfunction placeCloseButton() {\n\n    var btnPos = getPos(_('close-btn'));\n    _('close-btn').style.transform = 'translateX(' + (btnPos.mainSvg.width - 56) + 'px)';\n}\nplaceCloseButton();\n\nfunction hoverMap() {\n    var btnWrap = _('button-wrap');\n    var dist;\n    var lastDist;\n    var currentPath; //Path to be removed when mouseout\n\n    var mouseOut = function mouseOut(dist) {\n        // dist from opening popups to remove pointer\n        var pointerDist = typeof dist === 'number' ? dist : lastDist;\n\n        _('oval-pointer').style.transform = 'translate(-80px, 0px )';\n\n        if (isFirefox) {\n\n            _('show-icon').style.transform = 'translate(-24px,' + pointerDist + 'px )';\n        } else if (isSafari) {\n\n            _('show-icon').style.transform = 'translate(-24px,' + pointerDist + 'px )';\n        } else {\n\n            _('show-icon').style.transform = 'translate(-22px,' + pointerDist + 'px )';\n        }\n    };\n\n    if (wW > 768) btnWrap.onmouseover = handler;\n\n    function handler(e) {\n        dist = getDistance(e.target.className, e.target.id);\n\n        function getDistance(el, id) {\n            var totalDist = function totalDist(n) {\n                return n * 37;\n            };\n            var nodelist = _(el);\n            var elArray = [].slice.call(nodelist);\n\n            for (var i = 0; i < elArray.length; i++) {\n                if (elArray[i].id == id) return totalDist(i);\n            }\n        }\n\n        function getPathElement(el, map_paths) {\n            var newPathArray = [];\n            var pathArray = [].slice.call(map_paths);\n\n            //Puts elements in correct order\n            for (var i = pathArray.length - 1; i >= 0; i--) {\n                newPathArray.push(pathArray[i]);\n            }\n\n            var target = document.getElementById(el);\n            var targetArray = [].slice.call(_(target.className));\n\n            for (var i = 0; i < targetArray.length; i++) {\n                if (targetArray[i] === target) return newPathArray[i];\n            }\n        };\n\n        var animateGooey = function animateGooey() {\n\n            if (!_('show-icon').classList.contains('icon-transition')) {\n\n                // transforms only up and down before out.\n                _('show-icon').style.transform = 'translate(-22px,' + dist + 'px )';\n\n                setTimeout(function () {\n                    _('show-icon').classList.add('icon-transition');\n                    _('show-icon').style.transform = 'translate(-15px,' + dist + 'px )';\n                    _('oval-pointer').style.transform = 'translate(0px, 0px )';\n                }, 100);\n            } else {\n                _('show-icon').style.transform = 'translate(-15px,' + dist + 'px )';\n                _('oval-pointer').style.transform = 'translate(0px, 0px )';\n            }\n        };\n\n        var animatePathLines = function animatePathLines(path, map_paths) {\n            var classId = path.id.replace(/-sm$/ig, \"\");\n\n            for (var i = 0; i < map_paths.length; i++) {\n                //Removes all classes before target element class gets added\n                if (map_paths[i].classList.length === 2) {\n\n                    var className = map_paths[i].classList[1];\n                    map_paths[i].classList.remove(className);\n                }\n            }\n            path.classList.add(classId);\n            return classId;\n        };\n\n        var removeCardsClass = function removeCardsClass(target) {\n\n            var card = _('card-icon');\n            var length = card.length;\n\n            while (length--) {\n                var styleTransform = +card[length].style.transform.replace(/([^-\\d])/ig, '');\n                if (styleTransform !== 0) card[length].style.transform = 'translateY(0px)';\n            }\n        };\n        var animateCardsUp = function animateCardsUp(path) {\n\n            var card = _('card-icon');\n            var regEx = /-.+$/ig;\n            var target = path.id.replace(regEx, '');\n            var length = card.length;\n\n            //If target also has 2 classList, remove that class and add p0opupcard\n            while (length--) {\n                var cardParent = card[length].parentNode;\n                var styleTransform = +card[length].style.transform.replace(/([^-\\d])/ig, '');\n\n                if (target === cardParent.id.replace(regEx, '')) {\n                    // card[length].style.transform = 'translateY(-140px)'\n\n                    card[length].style.transform = 'translateY(-140px)';\n                } else if (styleTransform !== 0) {\n                    card[length].style.transform = 'translateY(0px)';\n                }\n            }\n        };\n\n        function AnimateCircles(path, map_paths) {\n\n            var circles = document.querySelectorAll('#pulse-circles circle');\n            var paths = [];\n            //Removes all classes before target elements classes gets added\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = circles[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var cir = _step2.value;\n\n                    if (cir.classList.length > 1) {\n                        cir.classList.remove(cir.classList[1]);\n                    }\n                }\n                //Stops before error when not passing arguments from click handler\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n\n            if (!arguments.length) return;\n\n            //Pairs circles and returns the pairs so classes can be added\n            var pairCircles = function pairCircles() {\n                var cir = [];\n                for (var j = 0; j < circles.length; j += 2) {\n\n                    cir.push([circles[j], circles[j + 1]]);\n                }\n                return cir;\n            };\n\n            for (var i = 0; i < map_paths.length; i++) {\n\n                paths.unshift(map_paths[i].id);\n            }\n\n            var index = paths.indexOf(path.id);\n            var cirPairs = pairCircles()[index];\n\n            cirPairs[0].classList.add('middle-pulse');\n            cirPairs[1].classList.add('ring-pulse');\n        };\n\n        var removeCircles = function removeCircles(string) {\n            var activeCircles = document.querySelectorAll('.middle-pulse, .ring-pulse');\n\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = activeCircles[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var cir = _step3.value;\n\n\n                    cir.addEventListener('animationend', function (e) {\n\n                        e.target.classList.remove(e.target.classList[1]);\n                    });\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n        };\n        function removeAll(string) {\n            removeCircles(string);\n            mouseOut(dist);\n            removeCardsClass();\n            try {\n                //Path to be removed when mouseout\n                document.getElementById(currentPath).classList.remove(currentPath);\n            } catch (err) {}\n        }\n        function handleMap(e) {\n            var target = e.target.classList.value;\n\n            //If click comes from opening svg modals\n            if (target === 'card-color-st39' || wW > 768 && e.type === 'click') {\n\n                return removeAll(path);\n            }\n            // mouse over\n            if (e.target.id) {\n                //Start the path animated lines\n                var map_paths = wW > 768 ? _('map-paths') : _('map-paths-sm');\n                var path = getPathElement(e.target.id, map_paths);\n\n                //Used to update translate for button location\n                lastDist = dist;\n\n                animateGooey();\n                currentPath = animatePathLines(path, map_paths);\n                AnimateCircles(path, map_paths);\n                animateCardsUp(path);\n\n                //Only runs after mouseover elements run first, then initiated. \n                _('interactive-container').onmouseover = function (e) {\n                    if (e.target.className !== 'open-canvas-page' && wW > 768) {\n\n                        removeAll();\n                    }\n                };\n            }\n        }\n\n        if (e.type == 'mouseover' && wW > 768) {\n            handleMap(e);\n        } else if (e.type === 'click') {\n\n            handleMap(e);\n        }\n        return [dist];\n    }\n    return [mouseOut, handler]; // To be able to use mouseOut function and handler function that returns dist to use for mouseOut Func\n};\n\nvar toggleStars = {\n    toggle: false\n};\n\nvar robotSection = function robotSection(e) {\n\n    var stars = [];\n    var animateStars = function animateStars() {\n\n        var canvas = document.getElementById('star-canvas');\n        var ctx = canvas.getContext('2d');\n        var width = canvas.width = window.innerWidth;\n        var height = canvas.height = window.innerHeight;\n\n        var randomWidth = function randomWidth() {\n            //max and min\n            return Math.random() * (width / 2 - width / 9) + width / 9;\n        };\n\n        var NightStars = function NightStars() {\n            var _this3 = this;\n\n            var randomStart = randomWidth();\n\n            this.duration = 2000; //used to delay stars\n            this.radius = 13 + Math.random() * 5; //size of stars\n\n            this.i = 0; //x and y speed\n            this.k = 0; //opacity speed\n\n            this.start = {\n                y: Math.random() * height\n            };\n\n            this.Flicker = function (increntment) {\n                return Math.cos(increntment - Math.PI / 180) * .2;\n            };\n\n            this.radSize = function (increntment) {\n                return Math.sin(increntment - Math.PI / 180) * 7;\n            };\n\n            this.x = function (increntment, starSize) {\n                //full screen animate change this.randomWidth back to width / 2\n                return Math.cos(increntment - Math.PI / 180) * (randomStart + starSize);\n            };\n\n            this.y = function (increntment) {\n                return Math.sin(-increntment - Math.PI / 180) * 160;\n            };\n\n            this.draw = function (ctx) {\n                var s = _this3;\n\n                var opacSpeed = s.k += .3;\n                var speed = s.i += s.randomSpeed;\n\n                var radSize = s.radSize(speed);\n                var flicker = s.Flicker(opacSpeed);\n\n                var y = s.y(speed);\n                var x = s.x(speed, s.radius);\n\n                ctx.translate(width / 2, s.start.y);\n                var gradient = ctx.createRadialGradient(x, y, .4, x, y, 14);\n\n                gradient.addColorStop(0, 'LightSkyBlue');\n                gradient.addColorStop(.9, 'DodgerBlue');\n                gradient.addColorStop(1, 'RoyalBlue');\n\n                ctx.beginPath();\n                ctx.arc(x, y, s.radius - radSize - flicker, 0, Math.PI * 2);\n                ctx.fillStyle = gradient;\n                ctx.fill();\n\n                ctx.translate(-width / 2, -s.start.y);\n            };\n        };\n\n        function createStars(starCount, update) {\n            var delay = 0;\n\n            for (var i = 0; i < starCount; i++) {\n                delay += Math.random() * width;\n\n                var nightStars = new NightStars();\n                nightStars.randomSpeed = .001 + Math.random() * .006;\n                nightStars.startTime = Date.now();\n                nightStars.duration += delay; //sets a random delay for stars to start\n                stars.push(nightStars);\n            }\n            update();\n        }\n\n        function update() {\n            //Stopping stars\n            if (toggleStars.toggle) {\n                stars.length = 0;\n                ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n                return;\n            }\n\n            ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\n            var all = stars.length;\n            for (var i = 0; i < all; i++) {\n                // let percent = Math.min( ( Date.now() - stars[i].startTime ) / stars[i].duration, 1 )  //Delay to start stars\n                var percent = Math.min(Date.now() - stars[i].startTime, 1); // No delay\n\n                if (percent === 1) {\n                    stars[i].draw(ctx);\n                }\n            }\n            requestAnimationFrame(update);\n        }\n\n        return {\n            createStars: createStars,\n            update: update\n        };\n    };\n\n    var updateText = function () {\n\n        var toggle = true;\n        var textField = _('text-field');\n\n        function changeToggle(boolean) {\n            toggle = boolean;\n        }\n        return {\n            toggleFalse: function toggleFalse() {\n                changeToggle(false);\n            },\n            updateImgText: function updateImgText(img) {\n\n                changeToggle(true);\n\n                var imgText = img.getAttribute('data-target');\n                var textLength = imgText.length;\n\n                for (var i = 0; i < textLength; i++) {\n\n                    (function (i) {\n                        setTimeout(function () {\n\n                            if (!toggle) return;\n\n                            textField.textContent += imgText[i];\n                        }, 100 * i);\n                    })(i);\n                }\n            }\n        };\n    }();\n\n    function electricBox() {\n        var randomCir = [0, 1, 2, 3, 4, 5];\n\n        function getRandom(num) {\n            return Math.floor(Math.random() * Math.floor(num));\n        }\n        function findNum(item) {\n\n            var newNum = randomCir.splice(item, 1);\n\n            _('robot-st34')[newNum].classList.add('blink');\n            if (randomCir.length) {\n                relay(randomCir);\n            }\n        }\n        function relay(el) {\n            window.setTimeout(function () {\n                var item = getRandom(el.length - 1);\n                findNum(item);\n            }, 80);\n        }\n        relay(randomCir);\n    };\n\n    function checkForClasses() {\n        var circles = _('robot-st34').length;\n\n        // Add blinking light classes\n        for (var i = 0; i < circles; i++) {\n            if (_('robot-st34')[i].classList.contains('blink')) {\n\n                _('robot-st34')[i].classList.remove('blink');\n            }\n        }\n        electricBox();\n    };\n\n    // Add electricity for robot box stomach\n    function addElectricity() {\n        var pathLength = _('electric-path').length;\n        for (var i = 0; i < pathLength; i++) {\n            _('electric-path')[i].style.strokeDasharray = 20;\n            _('electric-path')[i].style.strokeDashoffset = 280;\n        }\n        var start = 0;\n\n        function draw(timestamp) {\n            if (!start) start = timestamp;\n            var runtime = timestamp - start;\n            var progress = Math.min(runtime / 1200, 1);\n\n            for (var i = 0; i < pathLength; i++) {\n                _('electric-path')[i].style.strokeDashoffset = 280 + 280 * progress;\n            }\n\n            if (progress < 1) {\n                requestAnimationFrame(draw);\n            } else {\n                for (var i = 0; i < pathLength; i++) {\n                    _('electric-path')[i].setAttribute('style', '');\n                }\n                return;\n            }\n        }\n        requestAnimationFrame(draw);\n    };\n\n    /** Outter function scope variables **/\n    var designImages = document.getElementsByClassName('designImages');\n    var img_container = document.getElementsByClassName('image-container')[0];\n\n    var animateSlider = {\n        target: null,\n        partialDist: 0,\n        j: 0,\n        dist: 0,\n        start: 0,\n        images: [],\n        imgStart: 0,\n        newStart: function newStart(num) {\n\n            return parseInt(this.images[num].style.transform.replace(/^([\\w]*)\\(|(px.*)$/ig, ''));\n        },\n        containerWidth: function containerWidth() {\n            return parseInt(img_container.style.width.replace(/px/ig, ''));\n        },\n        cloneImage: function cloneImage(img) {\n            var clonedImg = img.cloneNode(true);\n            clonedImg.className = '';\n            clonedImg.removeAttribute('style');\n            imgInlarge.checkForDuplicates('designVisible');\n            imgInlarge.moveElement(clonedImg, 'designVisible');\n        },\n        draw: function draw(timestamp) {\n\n            if (!this.start) this.start = timestamp;\n\n            var runtime = timestamp - this.start;\n            var progress = Math.min(runtime / 700, 1);\n\n            this.images[0].style.transform = 'translate(' + (this.imgStart - this.dist * progress) + 'px, -50%)';\n\n            if (progress === 1) {\n\n                //Second photo following the first to be animated automatically\n                if (this.j === 1) {\n\n                    //checks if left or right button click with a negative left or positive right and updates imgStart\n                    this.imgStart = this.dist < 0 ? -this.containerWidth() : this.containerWidth();\n                    this.dist = this.dist < 0 ? -this.containerWidth() : this.containerWidth();\n\n                    this.start = 0;\n                    var item = this.images.shift();\n                    this.images.push(item);\n                    this.j = 0;\n                } else {\n\n                    //User double clicks same button when 2nd image isn't finished it draws again\n                    if (this.imgStart !== this.dist) {\n\n                        this.draw();\n                    } else {\n                        //Stops typed text from running only when photo stops into place\n                        _('text-field').textContent = '';\n                        updateText.updateImgText(this.images[0]); //Starts the typed text function\n\n                        this.cloneImage(this.images[0]);\n                    }\n                    return this.j++;\n                }\n            }\n            requestAnimationFrame(animateSlider.draw.bind(this));\n        },\n        animateData: function animateData(e) {\n            var target = this.target.innerText;\n            var newStart = this.newStart(0);\n            this.partialDist = newStart;\n\n            //If user clicks before image done animating, updates current location and starts again\n            if (newStart !== 0 && !isNaN(newStart)) {\n\n                if (target === '<') {\n                    //If user double clicks same button right away\n                    if (newStart < 0) {\n                        this.imgStart = newStart;\n                        this.dist = this.containerWidth() + newStart;\n                    } else {\n                        this.j = 0;\n                        this.dist = newStart;\n                        this.imgStart = newStart;\n                    }\n                }\n                if (target === '>') {\n\n                    if (newStart < 0) {\n                        this.j = 0;\n                        this.imgStart = newStart;\n                        this.dist = newStart;\n                        //If user double clicks same button right away\n                    } else {\n                        this.imgStart = newStart;\n                        this.dist = -this.containerWidth() + newStart;\n                    }\n                }\n                this.start = 0;\n            } else {\n                this.start = 0;\n\n                if (target === '<') {\n                    //first click starts image outside the head\n                    this.j >= 1 ? this.imgStart = 0 : this.imgStart = this.containerWidth();\n                    this.dist = this.containerWidth();\n                } else {\n                    //first click starts image outside the head\n                    this.j >= 1 ? this.imgStart = 0 : this.imgStart = -this.containerWidth();\n                    this.dist = -this.containerWidth();\n                }\n\n                this.draw();\n            }\n        },\n        // load images into array to be used for slider\n        loadImages: function loadImages() {\n            for (var i = 0; i < designImages.length; i++) {\n                var element = designImages[i];\n                this.images.push(element);\n            }\n        }\n    };\n\n    // Keeps from resize event loading click handler\n    if (e.type !== 'resize' && e.type !== 'scroll') {\n\n        _('btnContainer').addEventListener('click', function (e) {\n            e.stopPropagation();\n            animateSlider.target = e.target;\n            animateSlider.animateData(e);\n\n            checkForClasses();\n            addElectricity();\n            updateText.toggleFalse();\n            _('text-field').textContent = '';\n        });\n    }\n\n    return [animateSlider, animateStars]; // To be used in the window.onload section\n};\n\nfunction DesignSlider() {\n    var img_container = document.getElementsByClassName('image-container')[0];\n    var img_container_rect = img_container.getBoundingClientRect();\n    this.ellipse = document.getElementsByClassName('clip-ellipse')[0];\n    this.rec = document.getElementsByClassName('screen-path')[0].getBoundingClientRect();\n    this.sectionContainer = document.getElementsByClassName('section-three-robot')[0].getBoundingClientRect();\n\n    var actualTop = this.rec.top - this.sectionContainer.top; //when page not fully scrolled into view it's the actual top\n\n    this.setEllipseAttributes = function () {\n        this.ellipse.setAttribute('rx', this.rec.width / 2);\n        this.ellipse.setAttribute('ry', this.rec.height / 2);\n        this.ellipse.setAttribute('cx', this.rec.left + this.rec.width / 2 - 5);\n        this.ellipse.setAttribute('cy', actualTop + this.rec.height / 2);\n    };\n    this.setImgContainer = function () {\n        var container_Width = this.rec.width / 9 + this.rec.width;\n        var img_containerY = actualTop - (img_container_rect.height - this.rec.height) / 2;\n        img_container.style.transform = 'translate(-50%,' + img_containerY + 'px)'; //-48% to make up for 53% robot-svg offset\n        img_container.style.width = container_Width + 'px';\n    };\n    this.setButtonLocation = function () {\n\n        var addedWidth = window.innerWidth < 768 ? 70 : 200; //Distance bigger than robot head\n\n        var x = (window.innerWidth - (this.rec.width + addedWidth)) / 2;\n        var y = window.innerWidth > 768 ? actualTop + this.rec.height / 2 - 25 : this.rec.bottom - this.sectionContainer.top; // - 25 for the btnContainer height / 2\n\n        _('btnContainer').style.width = this.rec.width + addedWidth + 'px';\n        _('btnContainer').style.transform = 'translate(' + x + 'px,' + y + 'px)';\n    };\n    return function () {\n\n        return [this.setEllipseAttributes(), this.setImgContainer(), this.setButtonLocation()];\n    }.bind(this);\n}\n\nwindow.addEventListener('resize', function (e) {\n\n    var updateRobot = robotSection(e);\n\n    var designSlider = new DesignSlider();\n    designSlider(); //updates canvas size\n    updateRobot[1](); //updates button, image location , attributes of robot\n});\n\n// **** ASSEMBLY LINE SECTION ****\n\nvar AssemblyLine = function () {\n    function AssemblyLine() {\n        _classCallCheck(this, AssemblyLine);\n\n        this.mainSVG = _('assembly-line-svg');\n        this.sliders = _('roller_unit');\n        this.codeContainers = _('code-container');\n    }\n\n    _createClass(AssemblyLine, [{\n        key: \"getRect\",\n        value: function getRect(el) {\n            var rect = el.getBoundingClientRect();\n            var bBox = el.getBBox();\n            return { rect: rect, bBox: bBox };\n        }\n    }, {\n        key: \"getElemValue\",\n        value: function getElemValue(pos) {\n            var _$exec = /[1-9].*/.exec(this.mainSVG.getAttribute('viewBox')),\n                _$exec2 = _slicedToArray(_$exec, 1),\n                size = _$exec2[0];\n\n            var regEx = /^(\\d{4})\\s(\\d{3})$/ig;\n            var values = [];\n            values.length = 0;\n            var length = this.sliders.length;\n            var rollerUnit = this.sliders;\n            var codeElements = this.codeContainers;\n            for (var i = 0; i < length; i++) {\n                var rollerElem = rollerUnit[i];\n                var codeElem = codeElements[i];\n\n                switch (pos) {\n                    case 'container':\n                        return slidersContainer;\n                    case 'viewBoxWidth':\n                        return size.replace(regEx, '$1');\n                    case 'viewBoxHeight':\n                        return size.replace(regEx, '$2');\n                    case 'el':\n                        values.push(rollerElem);\n                        break;\n                    case 'rectX':\n                        values.push(this.getRect(rollerElem).rect.x); // not in use\n                        break;\n                    case 'codeBox.x':\n                        values.push(this.getRect(codeElem).rect.x);\n                        break;\n                    case 'codebBox.x':\n                        values.push(this.getRect(codeElem).bBox.x);\n                        break;\n                    case 'bBoxX':\n                        values.push(this.getRect(rollerElem).bBox.x); // not in use\n                        break;\n                    case 'y':\n                        values.push(this.getRect(rollerElem).bBox.y);\n                        break;\n                    case 'width':\n                        values.push(this.getRect(rollerElem).bBox.width);\n                        break;\n                    case 'height':\n                        values.push(this.getRect(rollerElem).bBox.height);\n                        break;\n                }\n            }\n            return values;\n        }\n    }]);\n\n    return AssemblyLine;\n}();\n\n;\n\nvar RollerUnit = function (_AssemblyLine) {\n    _inherits(RollerUnit, _AssemblyLine);\n\n    function RollerUnit() {\n        _classCallCheck(this, RollerUnit);\n\n        var _this4 = _possibleConstructorReturn(this, (RollerUnit.__proto__ || Object.getPrototypeOf(RollerUnit)).call(this));\n\n        _this4.getRect = _this4.getRect;\n        _this4.draw = _this4.draw.bind(_this4);\n        _this4.beginPos = [];\n        _this4.dist = [];\n        _this4.lessThan = '';\n        _this4.start = 0;\n        _this4.time = 1000;\n        _this4.current = {};\n        _this4.click = 0;\n        _this4.beltClick = 0;\n        _this4.foreinObjs = _('assembly-img-foreignObj');\n        _this4.foreinGroup = _('assembly-img-wrap');\n        _this4.belts = _('belt');\n        return _this4;\n    }\n\n    _createClass(RollerUnit, [{\n        key: \"startPos\",\n        value: function startPos(elem) {\n            var arr = [];\n            var el = elem;\n            var length = el.length;\n            for (var i = 0; i < length; i++) {\n                if (el[i].hasAttribute('style')) {\n                    arr.push(parseInt(el[i].style.transform.replace(/^([\\w]*)\\(([?-\\d].*)px\\)/ig, \"$2\")));\n                } else {\n                    arr.push(0);\n                }\n            }\n            return arr;\n        }\n    }, {\n        key: \"min\",\n        value: function min(start) {\n            var actual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n            var rect = Math.min.apply(Math, _toConsumableArray(start));\n            var dist = Math.min.apply(Math, _toConsumableArray(actual));\n            var index = start.indexOf(rect);\n            return { index: index, dist: dist };\n        }\n    }, {\n        key: \"max\",\n        value: function max(start, actual) {\n            var rect = Math.max.apply(Math, _toConsumableArray(start));\n            var dist = Math.max.apply(Math, _toConsumableArray(actual));\n            var index = start.indexOf(rect);\n            return { index: index, dist: dist };\n        }\n    }, {\n        key: \"getDistance\",\n        value: function getDistance() {\n            var _this5 = this;\n\n            var width = this.getElemValue('width')[0];\n            var arr = [];\n            var startingPoint = this.getElemValue('codeBox.x');\n            var actualDist = this.getElemValue('codebBox.x');\n\n            var maxElement = this.max(startingPoint, actualDist);\n            var minElement = this.min(startingPoint, actualDist);\n\n            var moveEnd = function moveEnd(k) {\n                var dist = _this5.left ? 431 : -431; // moveBeginning dist * 2    \n                arr.push({ dist: dist, index: k });\n            };\n\n            var moveBeginning = function moveBeginning(k) {\n                var dist = _this5.left ? minElement.dist + width : -(minElement.dist + width);\n                var rightPageStart = _this5.left ? actualDist.reverse()[k] + width : -actualDist[k] - width;\n\n                _this5.lessThan = k; //Updates the smallest distance\n                arr.push({ dist: dist * 2, index: k, rightPageStart: rightPageStart, pageRight: true });\n            };\n\n            for (var k = 0; k < 3; k++) {\n\n                if (minElement.index === k) {\n                    this.right ? moveEnd(k) : moveBeginning(k);\n                } else if (maxElement.index === k) {\n                    this.right ? moveBeginning(k) : moveEnd(k);\n                } else {\n                    var dist = this.left ? 431 : -431; // moveBeginning dist * 2\n                    arr.push({ dist: dist, index: k });\n                }\n            }\n            arr.sort = function (a, b) {\n                return a.place - b.place;\n            };\n            return arr;\n        }\n\n        // Add and remove foreignObjects into slider\n\n    }, {\n        key: \"foreinObjArr\",\n        value: function foreinObjArr() {\n            // let length =  this.foreinObjs.length\n            var length = this.foreinGroup.length;\n            var arr = new Array(length);\n\n            // Puts image foreignobjects into array\n            while (length) {\n                length--;\n                arr[length] = this.foreinGroup[length];\n            }\n\n            var startingPoint = this.getElemValue('codeBox.x');\n            var index = this.min(startingPoint).index;\n\n            var add = arr.splice(3, 1);\n            var removed = arr.splice(index, 1);\n\n            var removedChild = removed[0].childNodes[1];\n            var addChild = add[0].childNodes[1];\n            arr.splice(index, 0, add[0]);\n            arr.push(removed[0]);\n\n            //Add and remove just transforms first\n            var styleTransform = removed[0].attributes[1];\n            removed[0].removeAttribute(styleTransform.name);\n            add[0].setAttribute(styleTransform.name, styleTransform.value);\n\n            //Strips attributes of removed and add same attributes to added foreignobject\n            while (removedChild.attributes.length > 1) {\n\n                var attrName = removedChild.attributes[1].name;\n                var attrValue = removedChild.attributes[1].value;\n\n                addChild.setAttribute(attrName, attrValue);\n                removedChild.removeAttribute(removedChild.attributes[1].name);\n            }\n\n            this.foreinGroup = arr;\n        }\n\n        // Ran once when page reloads\n\n    }, {\n        key: \"positionForiegnObject\",\n        value: function positionForiegnObject(_this) {\n            var sliders = this.codeContainers;\n            var foreignObjects = this.foreinObjs;\n            var length = sliders.length;\n\n            for (var i = 0; i < length; i++) {\n\n                var slider_x = this.getRect(this.codeContainers[i]).bBox.x;\n                var slider_y = this.getRect(this.codeContainers[i]).bBox.y;\n                var slider_width = this.getRect(this.codeContainers[i]).bBox.width;\n                var slider_height = this.getRect(this.codeContainers[i]).bBox.height;\n\n                foreignObjects[i].setAttribute('x', slider_x);\n                foreignObjects[i].setAttribute('y', slider_y);\n                foreignObjects[i].setAttribute('width', slider_width);\n                foreignObjects[i].setAttribute('height', slider_height);\n            }\n            //Inputs image into container\n            _this.targetElem();\n        }\n    }, {\n        key: \"moreThanHalf\",\n        value: function moreThanHalf(dist, positiveCurrent, startDist) {\n            return dist - (startDist - positiveCurrent);\n        }\n    }, {\n        key: \"lessThanHalf\",\n        value: function lessThanHalf(current, dist, startDist) {\n            var d = dist.dist < 0 ? dist.dist * -1 : dist.dist;\n\n            if (startDist === 0) {\n                if (dist.rightPageStart) {\n                    var diff = current - startDist;\n                    var totalDiff = d - (current - startDist);\n                    return diff + totalDiff;\n                }\n                return d - current;\n            } else {\n                if (dist.rightPageStart) {\n                    var _diff2 = current - startDist;\n                    var _totalDiff = d - Math.abs(current - startDist);\n                    return _diff2 + _totalDiff;\n                }\n                var _diff = d - Math.abs(current - startDist);\n                return _diff;\n            }\n        }\n    }, {\n        key: \"oppisiteDir\",\n        value: function oppisiteDir(current, startDist) {\n            if (startDist === 0) {\n                return current;\n            } else {\n                if (current > startDist) {\n                    // more than half\n                    return current - startDist;\n                }\n                return startDist - current; //less than half    \n            }\n        }\n    }, {\n        key: \"handleRightPageStart\",\n        value: function handleRightPageStart(d, rightPageStart, posCurrent, startDist) {\n\n            if (startDist < 0) {\n                //more than half\n                if (d > posCurrent) {\n                    var _distance = posCurrent;\n                    return { distance: _distance, pageRight: false\n                        //less than half\n                    };\n                }\n                var difference = 1141.2 - posCurrent;\n                var totalDif = d - (1141.2 - posCurrent);\n                var distance = difference + totalDif;\n                return { distance: distance, pageRight: true };\n            } else {\n\n                //less than half only element with a rightPageStart of 1141.2\n                if (rightPageStart > 1160) {\n                    //1160\n                    var _difference = d / 2 - posCurrent;\n                    var _totalDif = d - _difference;\n                    var _distance2 = _totalDif + _difference;\n                    return { distance: _distance2, pageRight: true\n                        //more than half\n                    };\n                } else if (posCurrent < startDist) {\n                    var _distance3 = startDist - posCurrent;\n                    return { distance: _distance3, pageRight: false\n                        //less than half \n                    };\n                } else {\n                    var diff = posCurrent - startDist;\n                    var totalDiff = d - (posCurrent - startDist);\n                    var _distance4 = diff + totalDiff;\n                    return { distance: _distance4, pageRight: true };\n                }\n            }\n        }\n        // ** RIGHT BUTTON IS NEGATIVE DIST, LEFT BUTTON IS POSITIVE DIST**\n\n    }, {\n        key: \"handleDoubleClick\",\n        value: function handleDoubleClick(current, dist, beginPos) {\n            //Updates how many times back and forth before animation finishes\n            this.click++;\n\n            var currentDirection = Math.sign(this.currentDist[1].dist);\n            var distDirection = Math.sign(dist[1].dist);\n\n            for (var i = 0; i < 3; i++) {\n\n                //Middle dist not equal both negative or positives then use current dist\n                var dist_i = currentDirection !== distDirection ? this.currentDist[i] : dist[i];\n                var d = dist_i.dist < 0 ? dist_i.dist * -1 : dist_i.dist; //changed this\n\n                //Starts off with positive variables\n                var rightPageStart = dist_i.rightPageStart < 0 ? dist_i.rightPageStart * -1 : dist_i.rightPageStart;\n                var startDist = beginPos[i] < 0 ? beginPos[i] * -1 : beginPos[i];\n                var posCurrent = current[i] < 0 ? current[i] * -1 : current[i];\n\n                // When clicked opposite direction\n                if (currentDirection !== distDirection) {\n\n                    if (rightPageStart) {\n                        var rightStart = this.right ? -rightPageStart : rightPageStart;\n\n                        var cur = this.handleRightPageStart(d, rightPageStart, posCurrent, startDist, this.currentDist[i].index);\n                        var curDist = this.right ? -cur.distance : cur.distance;\n                        var pageRight = cur.pageRight;\n\n                        this.dist.push({ dist: curDist, index: dist_i.index, rightPageStart: rightStart, pageRight: pageRight });\n                        this.beginPos.push(current[i]);\n                    } else {\n                        var distance = this.oppisiteDir(posCurrent, startDist);\n                        var _dist = this.right && distance > 0 ? -distance : distance;\n\n                        this.dist.push({ dist: _dist, index: dist_i.index, rightPageStart: dist_i.rightPageStart, pageRight: false });\n                        this.beginPos.push(current[i]);\n                    }\n                    //Clicked same direction\n                } else {\n                    //After element starts from hidden part of page\n                    if (this.right && rightPageStart && current[i] < 0 || this.left && current[i] > 0 && rightPageStart) {\n\n                        this.lessThan = dist_i.index; //have to update rightPageStart again due to running this.getDistance() twice\n                        var _distance5 = d / 2 - (rightPageStart - posCurrent);\n                        var PosOrNegDistance = this.right && _distance5 > 0 ? _distance5 * -1 : _distance5;\n\n                        this.dist.push({ dist: PosOrNegDistance, index: dist_i.index, rightPageStart: dist_i.rightPageStart, pageRight: false });\n                        this.beginPos.push(current[i]);\n                    } else {\n                        var lessThanhalf = startDist < posCurrent || startDist && posCurrent < d ? true : false;\n                        var _distance6 = lessThanhalf ? this.lessThanHalf(posCurrent, dist_i, startDist) : this.moreThanHalf(d, posCurrent, startDist);\n                        var _PosOrNegDistance = this.right ? -_distance6 : _distance6;\n\n                        this.dist.push({ dist: _PosOrNegDistance, index: dist_i.index, rightPageStart: dist_i.rightPageStart, pageRight: true });\n                        this.beginPos.push(current[i]);\n                    }\n                }\n            }\n            //Removes prior values in arrays\n            this.dist.splice(0, 3), this.beginPos.splice(0, 3);\n            console.log(this.dist, this.beginPos);\n        }\n        //Updates sliders positions\n\n    }, {\n        key: \"updatePos\",\n        value: function updatePos() {\n            // Handles back and forth clicking\n            if (this.start) {\n                this.start = 0;\n\n                this.currentDist = this.getDistance();\n                this.currentBeginPos = this.startPos(this.sliders);\n                return this.handleDoubleClick(this.current, this.dist, this.beginPos);\n            } else {\n                this.updateBeltPos();\n                this.beginPos.length = 0;\n                this.dist.length = 0;\n                var dist = this.getDistance();\n                var beginPos = this.startPos(this.sliders);\n                // 3 is length of slider elements\n                for (var i = 0; i < 3; i++) {\n\n                    this.beginPos.push(beginPos[i]);\n                    this.dist.push(dist[i]);\n                }\n                requestAnimationFrame(this.draw);\n            }\n        }\n    }, {\n        key: \"animateBelts\",\n        value: function animateBelts(topGears, bottomGears) {\n            _('teeth-wrapper-top').style.transform = \"translate(\" + topGears + \"px)\";\n            _('teeth-wrapper-bottom').style.transform = \"translate(\" + bottomGears + \"px)\";\n        }\n    }, {\n        key: \"animate\",\n        value: function animate(sliders, imgGroup, value) {\n            sliders.style.transform = \"translate(\" + value + \"px)\";\n            imgGroup.style.transform = \"translate(\" + value + \"px)\";\n        }\n    }, {\n        key: \"draw\",\n        value: function draw(timestamp) {\n            var time = this.time;\n            if (!this.start) this.start = timestamp;\n            this.runtime = timestamp - this.start;\n            var progress = Math.min(this.runtime / time, 1);\n\n            var j = this.lessThan;\n\n            for (var i = 0; i < 3; i++) {\n\n                var num = i !== j ? i : j;\n                var sliders = this.sliders[num];\n\n                var imgGroup = this.foreinGroup[num];\n\n                var beginPos = this.beginPos[num];\n                var dist = this.dist[num].dist;\n                var rightStart = this.dist[num].rightPageStart;\n                var pageRight = this.dist[num].pageRight;\n                //Right or Left side element animate to other side of screen\n                if (num === j && pageRight) {\n\n                    if (progress <= .5) {\n                        var value = beginPos - dist * progress;\n                        this.current[num] = value;\n                        this.animate(sliders, imgGroup, value);\n                    } else {\n                        var _value = rightStart - dist * (progress - .5);\n                        this.current[num] = _value;\n                        this.animate(sliders, imgGroup, _value);\n                    }\n                } else {\n                    var _value2 = beginPos - dist * progress;\n                    this.current[num] = _value2;\n                    this.animate(sliders, imgGroup, _value2);\n                }\n            }\n            // Belts Animation\n            var topGears = this.beltPos.startPos[0] + this.beltPos.dist * progress;\n            var bottomGears = this.beltPos.startPos[1] - this.beltPos.dist * progress;\n            this.animateBelts(topGears, bottomGears);\n            if (progress < 1) {\n                requestAnimationFrame(this.draw);\n            } else {\n                this.foreinObjArr();\n                this.start = 0;\n                this.beltClick++;\n                this.click = 0;\n                imgInlarge.targetElem();\n                return;\n            }\n        }\n        //Stars gears inline left or right depending on left or right click\n\n    }, {\n        key: \"beltDirections\",\n        value: function beltDirections() {\n            var beltWidth = _('bottom-main').getBBox().width;\n\n            if (this.right) {\n                _('bottom-teeth').style.transform = \"translate( \" + beltWidth + \"px )\";\n                _('top-teeth').style.transform = \"translate( \" + -beltWidth + \"px )\";\n            } else {\n                _('bottom-teeth').style.transform = \"translate( \" + -beltWidth + \"px )\";\n                _('top-teeth').style.transform = \"translate( \" + beltWidth + \"px )\";\n            }\n        }\n    }, {\n        key: \"updateBeltPos\",\n        value: function updateBeltPos() {\n            var belts = this.startPos(this.belts);\n            var startPos = void 0,\n                dist = void 0;\n\n            // Starts gears on one side of the page or the other \n            if (this.beltClick === 0 || this.beltClick && belts[0] === 0) this.beltDirections();\n\n            if (this.right) {\n                startPos = belts;\n                dist = _('top-teeth').getBBox().width / 3;\n            }\n            if (this.left) {\n                startPos = belts;\n                dist = -(_('top-teeth').getBBox().width / 3);\n            }\n\n            //Keeps Gears always looking like their never ending\n            if (this.beltClick === 3) {\n                this.beltClick = 0;\n                this.animateBelts(0, 0);\n                this.beltDirections();\n                startPos = [0, 0];\n            }\n            this.beltPos = { dist: dist, startPos: startPos };\n        }\n    }]);\n\n    return RollerUnit;\n}(AssemblyLine);\n\nvar InLargeImg = function (_RollerUnit) {\n    _inherits(InLargeImg, _RollerUnit);\n\n    function InLargeImg() {\n        _classCallCheck(this, InLargeImg);\n\n        var _this6 = _possibleConstructorReturn(this, (InLargeImg.__proto__ || Object.getPrototypeOf(InLargeImg)).call(this));\n\n        _this6.container = _('img-inlarge-container');\n        _this6.animateClipPath = _this6.animateClipPath.bind(_this6);\n        _this6.img = document.querySelector('.inlarge-img-wrap img');\n        _this6.imgWrap = document.getElementsByClassName('inlarge-img-wrap')[0];\n        _this6.mouseMove = _this6.mouseMove.bind(_this6);\n        _this6.removeListener = _this6.removeListener.bind(_this6);\n        _this6.mouseY = 0;\n        _this6.imageClose = _this6.imageClose.bind(_this6);\n        _this6.targetElem = _this6.targetElem;\n        _this6.checkForDuplicates = _this6.checkForDuplicates;\n        _this6.moveElement = _this6.moveElement;\n        _this6.Y = 0;\n        return _this6;\n    }\n\n    _createClass(InLargeImg, [{\n        key: \"addClickListener\",\n        value: function addClickListener() {\n            _('img-inlarge-container').addEventListener('click', this.imageClose);\n        }\n    }, {\n        key: \"removeClickListener\",\n        value: function removeClickListener() {\n            _('img-inlarge-container').removeEventListener('click', this.imageClose);\n        }\n    }, {\n        key: \"checkForDuplicates\",\n        value: function checkForDuplicates(clssName) {\n            var imgs = this.imgWrap.children;\n            var length = imgs.length;\n            while (length--) {\n                if (imgs[length].className === clssName) {\n                    this.img = imgs[length];\n                    this.removeImg();\n                }\n            }\n        }\n        //Recursion\n\n    }, {\n        key: \"targetElem\",\n        value: function targetElem(elemX) {\n\n            var length = this.foreinObjs.length;\n            var arr = [];\n            var groupArr = [];\n\n            for (var i = length - 1; i >= 0; i--) {\n\n                // 1st pushes only elements with style attribtues of x\n                if (!elemX && this.foreinObjs[i].hasAttribute('x')) {\n\n                    arr.push(this.foreinObjs[i].getBoundingClientRect().x);\n                    groupArr.push(this.foreinObjs[i].parentNode);\n                }\n                // Scaling image only\n                if (this.foreinObjs[i].parentNode.getBoundingClientRect().x === elemX && this.toggleMoveElement) {\n                    this.group = this.foreinObjs[i].parentNode;\n                    return;\n                }\n                if (this.foreinObjs[i].getBoundingClientRect().x === elemX) {\n                    this.checkForDuplicates('webVisible');\n                    var imgNode = this.foreinObjs[i].childNodes[1];\n                    var clonedImg = imgNode.cloneNode(true);\n                    return this.moveElement(clonedImg, 'webVisible');\n                }\n            }\n            // Middle element which is the median of the three elements\n            var sorted = arr.sort(function (a, b) {\n                return a - b;\n            })[1];\n            this.targetElem(sorted);\n        }\n    }, {\n        key: \"insertText\",\n        value: function insertText(img) {\n            var imgContent = _('img-content');\n            var url = img.attributes[2].value;\n            var text = img.attributes[1].textContent;\n            imgContent.textContent = text;\n            imgContent.innerHTML += '<br>' + '<a href=\"' + url + '\"> ' + url + ' </a>' + '</br>';\n        }\n    }, {\n        key: \"moveElement\",\n        value: function moveElement(el, cls) {\n            this.img = el; //updates image to be used elsewhere \n            el.classList.add(cls);\n            var img_content = _('img-content');\n            var fragment = document.createDocumentFragment();\n            fragment.appendChild(el);\n            this.imgWrap.insertBefore(fragment, img_content);\n            this.imgWrap.classList.add('show-img');\n            this.imgWrap.classList.remove('hide-img');\n        }\n    }, {\n        key: \"removeImg\",\n        value: function removeImg(e) {\n            var _this7 = this;\n\n            //Only ran to exit out of image from click handler\n            if (e) {\n                this.container.style.opacity = 0;\n                this.imgWrap.classList.replace('show-img', 'hide-img');\n                setTimeout(function () {\n                    _this7.imgWrap.classList.replace('hide-img', 'show-img');\n                    _this7.container.removeAttribute('style');\n                    _this7.img.style.display = 'none';\n                }, 1100);\n            } else {\n\n                _('img-content').textContent = '';\n                this.img.parentNode.removeChild(this.img);\n            }\n        }\n        // Removes images \n\n    }, {\n        key: \"imageClose\",\n        value: function imageClose(e) {\n            this.removeClickListener();\n            if (e.target.tagName !== 'IMG') {\n\n                this.removeImg(e);\n            }\n        }\n        // Displays image\n\n    }, {\n        key: \"showImage\",\n        value: function showImage(clssName) {\n            this.img = document.getElementsByClassName(clssName)[0];\n            this.insertText(this.img);\n            this.img.style.display = 'block';\n            this.addClickListener();\n            this.container.style.display = 'flex';\n            this.container.style.opacity = 1;\n        }\n        // **  REMOVE ANIMATECLIPPATH IF I DON'T REALLLY HAVE TO USE IT FOR FIREFOX **\n        //Firefox only\n\n    }, {\n        key: \"animateClipPath\",\n        value: function animateClipPath(timestamp) {\n            if (!this.start) this.start = timestamp;\n            this.runtime = timestamp - this.start;\n            var progress = Math.min(this.runtime / 1000, 1);\n            this.imgWrap.style.clipPath = \"circle(\" + (this.clipStart + this.clipValue * progress) + \"%)\";\n\n            if (progress < 1) {\n                requestAnimationFrame(this.animateClipPath);\n            } else {\n\n                if (this.container.style.opacity == 0) {\n\n                    // Removes flex and opacity, sets back to display none\n                    this.container.removeAttribute('style');\n                    // this.img.parentNode.removeChild(this.img)\n                }\n                this.start = 0;\n            }\n        }\n    }, {\n        key: \"getTransform\",\n        value: function getTransform() {\n            var regEx = /^scale/g;\n            var transform = this.group.style.transform.replace(/^(\\w*\\(-?\\d*.\\w*\\))(.*)/ig, \"$1\");\n            var checkForScale = transform.match(regEx);\n            //So two scale values don't get added to element when translate doesn't exist\n            if (checkForScale) {\n                return '';\n            } else {\n                return transform;\n            }\n        }\n    }, {\n        key: \"scalePhoto\",\n        value: function scalePhoto(dist, scale, translate) {\n            document.getElementById('slider_1_').style.transform = \"translateY(\" + dist + \"px)\";\n            this.group.style.transform = translate + (\"scale( \" + (1 + scale) + \" )\");\n        }\n    }, {\n        key: \"mouseMove\",\n        value: function mouseMove(e) {\n            // multipy by 1.5 because of the lag, so I speed it up just a bit\n            var dist = e.clientY - this.mouseY;\n            var value = dist / this.Y;\n            var scale = Math.min(value < 0 ? -value : -value, 1);\n            var translate = this.getTransform();\n            var translateValue = +translate.replace(/[^-\\d.]/ig, \"\");\n\n            //Checks if element is either -431 or 431 so the correct transform origin can be added\n            if (translateValue > 2) {\n                this.group.style.transformOrigin = 165 + \"px \" + 450 + \"px\";\n            } else if (translateValue < -1) {\n                this.group.style.transformOrigin = 1034 + \"px \" + 458 + \"px\";\n            }\n            //scale is 1 when clicked somewhere else\n            if (scale < 1 && dist <= 6) this.scalePhoto(dist, scale, translate);\n        }\n    }, {\n        key: \"mouseDown\",\n        value: function mouseDown(e) {\n\n            _('slide-group').addEventListener('mouseup', this.removeListener, true);\n\n            this.toggleMoveElement = true;\n            this.targetElem();\n            var verPiece = document.getElementById('vert_piece');\n            var vertY = verPiece.getBBox().y;\n            var handleY = _('img-scale').getBBox().y;\n\n            //Gets distance slider needs to go  \n            this.Y = handleY - vertY;\n\n            //Start position for distance\n            if (!this.mouseY) this.mouseY = e.clientY;\n            _('slide-group').addEventListener('mousemove', this.mouseMove, true);\n        }\n    }, {\n        key: \"removeListener\",\n        value: function removeListener(e) {\n            _('slide-group').removeEventListener('mousemove', this.mouseMove, true);\n\n            var translate = this.getTransform();\n            this.scalePhoto(0, 0, translate);\n\n            _('slide-group').removeEventListener('mouseup', this.removeListener, true);\n            _('img-scale').removeEventListener('mousedown', this.mouseDown, true);\n\n            //Updates position when mouseUp\n            this.mouseY = 0;\n            this.toggleMoveElement = false;\n        }\n    }]);\n\n    return InLargeImg;\n}(RollerUnit);\n\nvar rollerUnit = new RollerUnit();\nvar imgInlarge = new InLargeImg();\nrollerUnit.positionForiegnObject(imgInlarge);\n\n_('img-scale').addEventListener('mousedown', function (e) {\n\n    imgInlarge.mouseDown(e);\n}, true);\n\n_('buttons').addEventListener('click', function (e) {\n\n    e.stopPropagation();\n    var target = e.target.parentElement.classList[0];\n\n    if (target === 'img-left' || target === 'img-right') {\n        if (rollerUnit.click === 1) return;\n\n        rollerUnit.left = target === 'img-left' ? true : false;\n        rollerUnit.right = target === 'img-right' ? true : false;\n        rollerUnit.updatePos();\n    } else if (target === 'img-inlarge') {\n        imgInlarge.showImage('webVisible');\n    }\n});\n\ndocument.getElementById('button-inlarge').addEventListener('click', function (e) {\n    imgInlarge.showImage('designVisible');\n});\n\n// **** GRAPH SECTION ****\n\nvar random = function random(min, max) {\n    return Math.random() * (max - min) + min;\n};\n\nvar toggleRobot = {\n    toggle: false,\n    flight: false, //Toggles when scrolled out of screen view\n    direction: 'up'\n};\n\nfunction startRobotFlight() {\n    // *** Burners ***\n\n    var flames = _('robot-flame');\n    var length = flames.length;\n\n    var from = { x: 1, y: 1 };\n    var to = {};\n    var distance = {};\n    var keys = Object.keys(from);\n\n    var next = function next(timestamp) {\n        //starts all over from gets starting point of the last size\n        Object.assign(from, to);\n        var length = keys.length;\n        for (var i = 0; i < length; i++) {\n            var axis = keys[i];\n            to[axis] = random(.8, 1);\n            distance[axis] = from[axis] - to[axis];\n        }\n\n        time.start = timestamp;\n    };\n\n    var time = {\n        total: 40\n    };\n\n    var drawBurners = function drawBurners(timestamp) {\n        if (toggleRobot.flight) return;\n        if (time.runtime > time.total || !to.x) next(timestamp);\n\n        time.runtime = timestamp - time.start;\n        var progress = time.runtime / time.total;\n\n        var _keys$map = keys.map(function (axis) {\n            return from[axis] - progress * distance[axis];\n        }),\n            _keys$map2 = _slicedToArray(_keys$map, 2),\n            x = _keys$map2[0],\n            y = _keys$map2[1];\n\n        for (var i = 0; i < length; i++) {\n            var flame = flames[i];\n            flame.style.transform = \"scale(\" + x + \", \" + y + \")\";\n        }\n        requestAnimationFrame(drawBurners);\n    };\n\n    //*** Draws Stars ***\n    var graphs = document.getElementsByClassName('graph-st20');\n    var recClip = document.getElementsByClassName('rec-clip')[0];\n    var fragment = document.createDocumentFragment();\n    var robotRect = _('floating_robot').getBoundingClientRect();\n    var graph = document.getElementById('graph-svg');\n\n    var _$exec3 = /[1-9].*/.exec(graph.getAttribute('viewBox')),\n        _$exec4 = _slicedToArray(_$exec3, 1),\n        size = _$exec4[0];\n\n    var regEx = /([1-9.]*)\\s([1-9.].*)/ig;\n    var graphWidth = size.replace(regEx, '$1');\n    var graphHeight = size.replace(regEx, '$2');\n\n    var robotHeight = robotRect.height;\n    var robotWidth = robotRect.width;\n    var startY = graphHeight - robotHeight;\n    var startX = robotRect.x - (window.innerWidth - graphWidth) / 2;\n\n    //starts stars randomly\n    var randomInterval = function randomInterval(callback, data, min, max) {\n\n        var time = {\n            start: performance.now(),\n            total: random(min, max)\n        };\n        var draw = function draw(timestamp) {\n            if (toggleRobot.flight) return;\n            if (time.total <= timestamp - time.start) {\n                time.start = timestamp;\n                time.total = random(min, max);\n                callback(data);\n            }\n            requestAnimationFrame(draw);\n        };\n        requestAnimationFrame(draw);\n    };\n\n    var createStar = function createStar(cx, cy, radius) {\n        var star = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        star.setAttribute(\"r\", radius);\n        star.setAttribute(\"cy\", cy);\n        star.setAttribute(\"cx\", cx);\n        star.setAttribute(\"fill\", \"white\");\n        star.setAttribute(\"fill-opacity\", 0);\n        return star;\n    };\n\n    var FallingStars = function FallingStars(data) {\n\n        var attr = new data(toggleRobot.direction);\n\n        var radius = attr.radius;\n        var cx = attr.cx;\n        var cy = attr.cy;\n        var dist = attr.dist;\n        var star = createStar(cx, cy, radius);\n\n        var time = {\n            start: performance.now(),\n            total: random(1900, 2000)\n        };\n\n        var draw = function draw(timestamp) {\n            if (toggleRobot.toggle || toggleRobot.flight) {\n                graph.removeChild(star);\n                return;\n            }\n            time.elapsed = timestamp - time.start;\n            var progress = Math.min(time.elapsed / time.total, 1);\n\n            var opacity = progress * 2;\n\n            star.setAttribute(\"cy\", cy + progress * dist);\n            star.setAttribute(\"fill-opacity\", progress < .5 ? opacity : 2 - opacity);\n            time.elapsed < time.total ? requestAnimationFrame(draw) : graph.removeChild(star);\n        };\n        requestAnimationFrame(draw);\n\n        //Inserts new star based on randomInterval runing throughStars()\n        fragment.appendChild(star);\n        graph.insertBefore(fragment, graph.firstChild);\n    };\n\n    var flyIntoPlace = {\n        beginY: graphHeight - robotHeight / 12,\n        hiddenX: function hiddenX() {\n            var difference = graphWidth - wW;\n            if (!wW < graphWidth) {\n\n                return robotRect.width + robotRect.x + difference;\n            }\n        },\n        hideRobot: function hideRobot(size) {\n            if (size === 1.3) {\n                var beginX = this.hiddenX();\n                _('floating_robot').style.transform = \"translate(\" + 0 + \"px, -\" + this.beginY + \"px)\";\n            }\n        },\n        createStars: function createStars() {\n            var attributes = function attributes(direction) {\n\n                if (direction === 'down') {\n\n                    toggleRobot.toggle = false;\n                    var radius = random(.5, 2.7);\n                    var cx = random(startX - 100, startX + robotWidth + 100);\n                    var cy = random(startY - 120, startY - 175);\n                    var dist = 100 + robotHeight;\n\n                    return { radius: radius, cx: cx, cy: cy, dist: dist };\n                } else if (direction === 'up') {\n\n                    var _radius = random(1.5, 3.7);\n                    var _cx = random(0 - 25, graphWidth + 25);\n                    var _cy = random(graphHeight - 80, graphHeight + 50);\n                    var _dist2 = -graphHeight;\n\n                    return { radius: _radius, cx: _cx, cy: _cy, dist: _dist2 };\n                }\n            };\n            //Every 80ms through 180ms of time.total it will draw a star\n            //**** STARTS STARS MOVING *****\n            randomInterval(FallingStars, attributes, 80, 180);\n        }\n    };\n\n    var graphData = {\n        start: 0,\n        total: 2000\n    };\n    var subtractRay = function subtractRay() {\n        _('left-text-panel').removeAttribute('clip-path');\n        _('rec-clip').style.transform = \"translate(485px, 520px)\";\n    };\n    var getStrokeLength = function getStrokeLength() {\n        var i = graphs.length;\n        var value = new Array(i);\n        function getLength() {\n            while (i--) {\n                value[i] = graphs[i].getTotalLength();\n            }\n        }\n        return {\n            runValue: function runValue() {\n                getLength();\n            },\n            getValue: function getValue() {\n                return value;\n            }\n        };\n    };\n    var strokeLength = getStrokeLength();\n    strokeLength.runValue();\n\n    var drawPercentStroke = function drawPercentStroke(progress) {\n        var stroke = strokeLength.getValue();\n        var i = graphs.length;\n        while (i--) {\n            graphs[i].style.stroke = 'url(#design-gradient)';\n\n            graphs[0].style.strokeDashoffset = stroke[0] + stroke[0] * progress;\n            graphs[1].style.strokeDashoffset = stroke[1] - stroke[1] * progress;\n        }\n    };\n    var animateGraph = function animateGraph(timestamp) {\n        if (!graphData.start) graphData.start = timestamp;\n        var runtime = timestamp - graphData.start;\n        var progress = Math.min(runtime / graphData.total, 1);\n\n        _('graph-percentage-top').textContent = Math.round(0 + 90 * progress) + ' %';\n        _('graph-percentage-bottom').textContent = Math.round(0 + 70 * progress) + ' %';\n        _('graph-rect').style.transform = 'translate(' + 412 * progress + 'px)';\n        drawPercentStroke(progress);\n\n        if (progress < 1) requestAnimationFrame(animateGraph);else return subtractRay();\n    };\n\n    var startAnimateGraph = function startAnimateGraph() {\n        recClip.style.transform = 'translate(0px, 0px)';\n        _('graph-clipping').classList.add('show-graphs');\n\n        //Animate graphs after recClip transform is done\n        setTimeout(function () {\n            requestAnimationFrame(animateGraph);\n        }, 2500);\n    };\n\n    var begin = {\n        start: 0,\n        total: 4000\n    };\n\n    var flyIn = function flyIn(timestamp) {\n        if (!begin.start) begin.start = timestamp;\n        begin.runtime = timestamp - begin.start;\n        var progress = Math.min(begin.runtime / begin.total, 1);\n        var curve = 624.9 / 2;\n        var ease = easeOut(progress);\n        var increment = curve * progress / 50;\n\n        var y = -flyIntoPlace.beginY + flyIntoPlace.beginY * progress;\n        var x = -Math.cos(increment + Math.PI / 180) * curve + curve;\n        // !begin.toggle\n        _('floating_robot').style.transform = \"translate(\" + -x + \"px, \" + y + \"px)\";\n        // : document.querySelector('#section-five-web .container-lg').style.transform = `scale(${1.3 - .3 * ease})`\n\n        if (progress === 1) {\n            // toggleRobot.toggle = true;\n            toggleRobot.direction = 'down';\n\n            //Resizes the whole container so robot fits into screen\n            if (wW > 1050) {\n                setTimeout(startAnimateGraph, 600);\n                document.querySelector('#section-five-web .container-lg').classList.add('scale-container');\n            } else {\n\n                startAnimateGraph();\n            }\n            return;\n        }\n        requestAnimationFrame(flyIn);\n    };\n    return { flyIn: flyIn, flyIntoPlace: flyIntoPlace, drawBurners: drawBurners };\n}\n\nvar navToggle = {\n    toggle: true\n};\n\nvar Navigation = function () {\n    function Navigation() {\n        _classCallCheck(this, Navigation);\n\n        this.navItems = document.querySelectorAll('.nav-list button');\n        this.scrollTo = this.scrollTo.bind(this);\n        this.animateScroll = this.animateScroll.bind(this);\n        this.start = 0;\n    }\n\n    _createClass(Navigation, [{\n        key: \"getDistance\",\n        value: function getDistance(el) {\n\n            var top = el.getBoundingClientRect().top;\n            var height = el.getBoundingClientRect().height;\n            var bottom = el.getBoundingClientRect().bottom;\n            return { top: top, height: height, bottom: bottom };\n        }\n    }, {\n        key: \"getScrolltoElement\",\n        value: function getScrolltoElement(target, regEx) {\n            var section = document.getElementsByTagName('section');\n            var length = section.length;\n            while (length--) {\n                if (target === section[length].id.replace(regEx, \"$1\")) {\n                    return {\n                        el: section[length],\n                        index: length\n                    };\n                }\n            }\n        }\n    }, {\n        key: \"outExpo\",\n        value: function outExpo(n) {\n            return 1 == n ? n : 1 - Math.pow(2, -10 * n);\n        }\n    }, {\n        key: \"animateScroll\",\n        value: function animateScroll(timestamp) {\n            if (!this.start) this.start = timestamp;\n            var runtime = timestamp - this.start;\n            var progress = this.outExpo(Math.min(runtime / 1000, 1));\n            var y = this.startPos + this.elDist * progress;\n\n            window.scroll(0, y);\n            if (progress < 1) {\n                requestAnimationFrame(this.animateScroll);\n            } else return navToggle.toggle = true;\n        }\n    }, {\n        key: \"toggleOpenBtn\",\n        value: function toggleOpenBtn() {\n            var i = this.navItems.length;\n            while (i--) {\n\n                if (this.navItems[i].style.transform) {\n                    console.log(this.navItems[i].removeAttribute('style'));\n                }\n            }\n        }\n    }, {\n        key: \"scrollTo\",\n        value: function scrollTo(e) {\n            this.toggleOpenBtn();\n            if (e.target.className === 'contact-modal') return;\n            var regEx = /(\\w+\\-\\w+)\\-\\w+/ig;\n            var sectionId = e.target.className.replace(regEx, \"$1\");\n\n            var scrollToElem = this.getScrolltoElement(sectionId, regEx).el;\n            var index = this.getScrolltoElement(sectionId, regEx).index;\n            var elDist = this.getDistance(scrollToElem, index).top;\n            this.elDist = elDist;\n            this.startPos = window.pageYOffset;\n            this.start = 0;\n\n            requestAnimationFrame(this.animateScroll);\n        }\n    }, {\n        key: \"scrollTo768\",\n        value: function scrollTo768(e) {\n\n            var targetBtn = e.target.parentNode.parentNode;\n            console.log(targetBtn);\n\n            if (targetBtn.hasAttribute('style')) {\n                return this.toggleOpenBtn();\n            }\n            this.toggleOpenBtn();\n            targetBtn.style.pointerEvents = 'auto';\n            targetBtn.style.transform = \"translateX(\" + -130 + \"px)\";\n        }\n    }, {\n        key: \"controller\",\n        value: function controller() {\n            var _this8 = this;\n\n            _('nav-list').addEventListener('click', function (e) {\n                console.log(e.target);\n                navToggle.toggle = false;\n                if (e.target.nodeName === \"BUTTON\") {\n\n                    _this8.scrollTo(e);\n                }\n                // Only @ screen size 768 and smaller\n                if (e.target.parentNode.classList[1] === 'nav-icon') {\n\n                    _this8.scrollTo768(e);\n                }\n            });\n        }\n    }]);\n\n    return Navigation;\n}();\n\nvar navigation = new Navigation();\nnavigation.controller();\n\nvar toggleAnimate = {\n    stars: true,\n    flightStars: true,\n    circuit: true\n    // circuitToggle.toggleAnim = false\n};var robot = new robotSection('event');\nvar robotFlight = startRobotFlight();\n\nvar triggerStars = function triggerStars(e) {\n    console.log(e.type);\n    var update = robot[1](e).update;\n    var star_count = 25;\n    var makeStars = robot[1]();\n    makeStars.createStars(star_count, update);\n};\n\nvar ScrollAnimate = function (_Navigation) {\n    _inherits(ScrollAnimate, _Navigation);\n\n    function ScrollAnimate() {\n        _classCallCheck(this, ScrollAnimate);\n\n        var _this9 = _possibleConstructorReturn(this, (ScrollAnimate.__proto__ || Object.getPrototypeOf(ScrollAnimate)).call(this));\n\n        _this9.sections = document.querySelectorAll('.section-three-robot, #section-five-web, #section-one-digital, #section-two-popups');\n        return _this9;\n    }\n\n    _createClass(ScrollAnimate, [{\n        key: \"checkElemTop\",\n        value: function checkElemTop(e) {\n            var length = this.sections.length;\n\n            while (length--) {\n                var dist = this.getDistance(this.sections[length]);\n                var elmTop = dist.top;\n                var elmHeight = dist.height;\n                var elmBottom = dist.bottom;\n\n                //Digital Hand\n                if (length === 0) {\n\n                    if (elmBottom < 100) toggleAnimate.circuit = false;\n                }\n                //Map\n                if (length === 1) {\n                    var pointerLocation = _('oval-pointer').getBoundingClientRect().x;\n\n                    //Stops scroll from running hovermap function over and over\n                    if (pointerLocation > 0) {\n                        var hovermap = hoverMap();\n                        var _dist3 = hovermap[1](e)[0]; // Position distance of show-icon gooey\n                        hovermap[0](_dist3, true); // handler(e) function remove gooey\n                    }\n                }\n                // Robot Design stars element\n                if (length === 2) {\n\n                    //Page in view start animate stars\n                    if (elmTop <= elmHeight && elmBottom >= elmHeight && toggleAnimate.stars) {\n\n                        toggleAnimate.stars = false;\n                        toggleStars.toggle = false;\n                        // triggerStars(e)\n                    }\n                    //Page out of view start stop animate\n                    if (!toggleAnimate.stars && (elmTop > elmHeight || elmBottom <= 0)) {\n                        toggleAnimate.stars = true;\n                        toggleStars.toggle = true;\n                    }\n                }\n                //Flying Robot / Graph element\n                if (length === 3) {\n\n                    if (elmTop < elmHeight / 2 && elmBottom >= elmHeight && toggleAnimate.flightStars) {\n                        toggleRobot.flight = false;\n                        toggleAnimate.flightStars = false;\n                        requestAnimationFrame(robotFlight.drawBurners);\n                        robotFlight.flyIntoPlace.createStars('up');\n                        requestAnimationFrame(robotFlight.flyIn);\n                    }\n                    if (!toggleAnimate.flightStars && (elmTop > elmHeight - 75 || elmBottom <= 0)) {\n\n                        //Removes ray\n                        _('rec-clip').style.display = \"none\";\n                        toggleAnimate.flightStars = true;\n                        toggleRobot.flight = true;\n                    }\n                }\n            }\n        }\n    }, {\n        key: \"scroll\",\n        value: function scroll() {\n            var _this10 = this;\n\n            window.addEventListener('scroll', function (e) {\n                // If nav item is clicked that scroll event will run and not trigger this scroll event\n                if (navToggle.toggle) {\n\n                    _this10.checkElemTop(e);\n                }\n            });\n        }\n    }]);\n\n    return ScrollAnimate;\n}(Navigation);\n\nvar scrollAnimate = new ScrollAnimate();\nscrollAnimate.scroll();\n\n//*** HAND SHAKE ***\n\nvar Digital = function () {\n    function Digital() {\n        _classCallCheck(this, Digital);\n\n        this.path = document.querySelectorAll('.stroke');\n        this.watch = document.getElementById('rotate_watch');\n    }\n\n    _createClass(Digital, [{\n        key: \"startHandAnimation\",\n        value: function startHandAnimation() {\n            var _this11 = this;\n\n            console.log('hey');\n            this.watch.classList.add('rotateWatch');\n            for (var i = 0; i < this.path.length; i++) {\n                this.path[i].classList.add('path');\n            }\n            //Removes animation after 4 intervals \n            setTimeout(function () {\n                _this11.removeDigitalAnimation();\n            }, 8100);\n        }\n    }, {\n        key: \"removeDigitalAnimation\",\n        value: function removeDigitalAnimation() {\n            this.watch.classList.remove('rotateWatch');\n            for (var i = 0; i < this.path.length; i++) {\n                this.path[i].classList.remove('path');\n            }\n        }\n    }]);\n\n    return Digital;\n}();\n\nvar circuitToggle = {\n    toggleAnim: true\n};\n\nvar Circuit = function () {\n    function Circuit() {\n        _classCallCheck(this, Circuit);\n\n        this.animCircuit = _('animate-circuit');\n        this.startAnimation = this.startAnimation.bind(this);\n        this.speed = [];\n        this.elements = [];\n        this.index = [];\n        this.pathLength = [];\n    }\n\n    _createClass(Circuit, [{\n        key: \"getDashStroke\",\n        value: function getDashStroke(el) {\n\n            var length = el.length;\n            while (length--) {\n                var index = el[length];\n                this.pathLength.unshift(_('animate-circuit')[index].getTotalLength());\n            }\n        }\n    }, {\n        key: \"getRandomPath\",\n        value: function getRandomPath(count) {\n            var i = 0;\n            var length = count;\n\n            while (i < length) {\n\n                var item = Math.floor(Math.random() * 10);\n\n                //Checks first to make sure same index is not in array\n                var notInArray = this.index.indexOf(item) === -1;\n\n                if (notInArray) {\n                    i++;\n                    this.index.push(item);\n                    this.elements.push(_('animate-circuit')[item]);\n                }\n            }\n\n            //Updates new random elements and returns them\n            this.animCircuit = this.elements;\n            return this.index;\n        }\n    }, {\n        key: \"addData\",\n        value: function addData(index) {\n\n            this.speed.push({ speed: 0, j: 0, delay: 25 * index });\n        }\n    }, {\n        key: \"setDashArray\",\n        value: function setDashArray(count) {\n            var allElements = _('animate-circuit').length;\n            var index = this.getRandomPath(count);\n            var i = count;\n            this.getDashStroke(index);\n\n            while (i--) {\n\n                this.animCircuit[i].style.stroke = 'orange';\n                this.animCircuit[i].style.strokeDashoffset = -this.pathLength[i];\n                this.animCircuit[i].style.strokeDasharray = this.pathLength[i];\n\n                this.addData(count);\n\n                if (i === 0) this.startAnimation();\n            }\n        }\n    }, {\n        key: \"startAnimation\",\n        value: function startAnimation() {\n            var dist = this.pathLength;\n            var el = this.animCircuit;\n            var duration = this.speed;\n            var length = el.length;\n\n            function draw() {\n                //Removes Animation\n                if (!toggleAnimate.circuit) {\n                    var i = el.length;\n\n                    while (i--) {\n                        el[i].removeAttribute('style');\n                    }\n                    return;\n                }\n\n                for (var _i3 = length - 1; _i3 >= 0; _i3--) {\n                    var dashArray = el[_i3].style.strokeDasharray;\n                    var dashOffset = el[_i3].style.strokeDashoffset;\n                    // StrokeDashoffset is less then 0 runs same direction \n                    if (dashOffset >= 0 && !duration[_i3].j) {\n                        duration[_i3].speed = 0;\n                        duration[_i3].j = 1;\n                        _iterator4 = 0;\n                    }\n\n                    var speed = duration[_i3].speed += 4;\n                    var _iterator4 = dashOffset <= 0 ? -dist[_i3] : 0;\n\n                    //Stops strokedasharray at about a 3rd to keep the length that size\n                    if (dashArray >= dist[_i3] / 1.8) {\n\n                        dashArray = dist[_i3] - speed;\n                    }\n\n                    el[_i3].style.strokeDashoffset = _iterator4 + speed;\n                }\n                requestAnimationFrame(draw);\n            }\n            requestAnimationFrame(draw.bind(this));\n        }\n    }]);\n\n    return Circuit;\n}();\n\nvar digital = new Digital();\nvar circuit = new Circuit();\n\ncircuitToggle.toggleAnim = false;\n\nwindow.onload = function (e) {\n    circuit.setDashArray(6);\n    // digital.startHandAnimation()\n    // console.log(document.getElementById('test-line').getTotalLength());\n\n    var newTechnologies = new Technologies();\n    newTechnologies.loadImages();\n\n    document.querySelector('.technologies .start-canvas').addEventListener('click', function () {\n        Technologies.prototype.toggle = true;\n        requestAnimationFrame(newTechnologies.draw.bind(newTechnologies));\n    }.bind(this));\n\n    document.querySelector('.technologies .stop-canvas').addEventListener('click', function () {\n        Technologies.prototype.toggle = false;\n        requestAnimationFrame(newTechnologies.draw.bind(newTechnologies));\n    }.bind(this));\n\n    var starryNight = new StarryNight();\n    starryNight.loadImages();\n\n    hoverMap();\n\n    var designSlider = new DesignSlider();\n    designSlider();\n\n    robot[1](); //updates robot location\n    robot[0].loadImages(); //then loades images into slider\n\n    robotFlight.flyIntoPlace.hideRobot(1.3); //Hides flying robot out of screen view\n\n}.bind(undefined);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/main.js\n");

/***/ })

/******/ });